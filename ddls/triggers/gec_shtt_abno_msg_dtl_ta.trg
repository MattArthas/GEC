CREATE OR REPLACE TRIGGER GEC_SHTT_ABNO_MSG_DTL_TA                                                                                                               
   BEFORE INSERT OR UPDATE OR DELETE OF 
         EQUILEND_MESSAGE_ID, 
         FROM_CORP_ID, 
         FROM_SUBACCOUNT_ID, 
         FROM_LEGAL_ENTITY_ID, 
         FROM_TRADER_ID, 
         TO_CORP_ID, 
         TO_SUBACCOUNT_ID, 
         TO_LEGAL_ENTITY_ID, 
         TO_TRADER_ID, 
         BROKER_CD, 
         EQUILEND_ID, 
         SECURITY_ID, 
         SECURITY_ID_TYPE, 
         BORROW_QTY, 
         RATE, 
         RATE_TYPE, 
         BANCHMARK,
         RESET_INTERVAL, 
         FEE,
         FEE_TYPE,
		 PRICE_CURRENCY_CD, 
         CASHAMOUNT, 
         RECLAIM_RATE, 
         MOD2,
         TAX_VOUCHER_DETAILS, 
         CUM_OR_EX_DIVIDEND, 
         MINIMUM_FEE, 
         PREPAY_RATE, 
         BILLING_PRICE, 
         MINIMUM_FEE_CD, 
         BILLING_FXRATE,
         BILLING_CASHAMOUNT, 
         BILL_DERIVATION_IND,
         EQL_COLLATERAL_TYPE, 
         EQL_COLLATERAL_TYPE_DESC, 
         COLLATERAL_MARGIN, 
         AMOUNT, 
         CONTRACT_PRICE,
         CONTRACT_VALUE, 
         COLLATERAL_CURRENCY_CD, 
         COLLATERAL_FXRATE, 
         TRADE_DATE, 
         SETTLE_DATE, 
         PREPAY_DATE,
		 TERM_DATE, 
         TERM_TYPE, 
         CALLABLE_DATE, 
         SETTLEMENT_TYPE, 
         BORR_SETTLE_INSTRID, 
         LEND_SETTLE_INSTRID, 
         LOG_NUMBER, 
         PRIVATE_COMMENTS, 
         CALLABLE_INDICATOR, 
         CALLBACK_INDICATOR,
         STATUS,
         STATUS_MSG,
         HOLDBACK_FLAG
   ON GEC_SHTT_ABNO_MSG_DTL
   FOR EACH ROW                                                                                                                                          
DECLARE
   v_opCode CHAR(1); 
BEGIN
   v_opCode := CASE WHEN INSERTING THEN 'I'
                    WHEN UPDATING  THEN 'U'
                    WHEN DELETING  THEN 'D'
               END;
   IF v_opCode = 'I' OR v_opCode = 'U'
   THEN
   :new.LAST_UPDATED_AT := sysdate;
   :new.LAST_UPDATED_BY := substr(NVL(SYS_CONTEXT('USERENV','CLIENT_IDENTIFIER'), 
   	   sys_context('USERENV','OS_USER')|| '@' || sys_context('USERENV','HOST')),1,32);
   END IF;

   INSERT INTO GEC_SHTT_ABNO_MSG_DTL_AUD(
         EQUILEND_MESSAGE_ID, 
         FROM_CORP_ID, 
         FROM_SUBACCOUNT_ID, 
         FROM_LEGAL_ENTITY_ID, 
         FROM_TRADER_ID, 
         TO_CORP_ID, 
         TO_SUBACCOUNT_ID, 
         TO_LEGAL_ENTITY_ID, 
         TO_TRADER_ID, 
         BROKER_CD, 
         EQUILEND_ID, 
         SECURITY_ID, 
         SECURITY_ID_TYPE, 
         BORROW_QTY, 
         RATE, 
         RATE_TYPE, 
         BANCHMARK, 
         RESET_INTERVAL,
         FEE,
         FEE_TYPE,
		 PRICE_CURRENCY_CD, 
         CASHAMOUNT, 
         RECLAIM_RATE,
         MOD2, 
         TAX_VOUCHER_DETAILS, 
         CUM_OR_EX_DIVIDEND, 
         MINIMUM_FEE, 
         PREPAY_RATE, 
         BILLING_PRICE, 
         MINIMUM_FEE_CD, 
         BILLING_FXRATE,
         BILLING_CASHAMOUNT,
         BILL_DERIVATION_IND, 
         EQL_COLLATERAL_TYPE, 
         EQL_COLLATERAL_TYPE_DESC, 
         COLLATERAL_MARGIN, 
         AMOUNT, 
         CONTRACT_PRICE,
         CONTRACT_VALUE, 
         COLLATERAL_CURRENCY_CD, 
         COLLATERAL_FXRATE, 
         TRADE_DATE, 
         SETTLE_DATE, 
         PREPAY_DATE,
		 TERM_DATE, 
         TERM_TYPE, 
         CALLABLE_DATE, 
         SETTLEMENT_TYPE, 
         BORR_SETTLE_INSTRID, 
         LEND_SETTLE_INSTRID, 
         LOG_NUMBER, 
         PRIVATE_COMMENTS, 
         CALLABLE_INDICATOR, 
         CALLBACK_INDICATOR,
         STATUS,
         STATUS_MSG,
         HOLDBACK_FLAG,
         LAST_UPDATED_BY,
         LAST_UPDATED_AT,
         OP_CODE
      )
   VALUES (
         DECODE(v_opCode, 'D', :OLD.EQUILEND_MESSAGE_ID, :NEW.EQUILEND_MESSAGE_ID), 
         DECODE(v_opCode, 'D', :OLD.FROM_CORP_ID, :NEW.FROM_CORP_ID), 
         DECODE(v_opCode, 'D', :OLD.FROM_SUBACCOUNT_ID, :NEW.FROM_SUBACCOUNT_ID), 
         DECODE(v_opCode, 'D', :OLD.FROM_LEGAL_ENTITY_ID, :NEW.FROM_LEGAL_ENTITY_ID), 
         DECODE(v_opCode, 'D', :OLD.FROM_TRADER_ID, :NEW.FROM_TRADER_ID), 
         DECODE(v_opCode, 'D', :OLD.TO_CORP_ID, :NEW.TO_CORP_ID), 
         DECODE(v_opCode, 'D', :OLD.TO_SUBACCOUNT_ID, :NEW.TO_SUBACCOUNT_ID), 
         DECODE(v_opCode, 'D', :OLD.TO_LEGAL_ENTITY_ID, :NEW.TO_LEGAL_ENTITY_ID), 
         DECODE(v_opCode, 'D', :OLD.TO_TRADER_ID, :NEW.TO_TRADER_ID), 
         DECODE(v_opCode, 'D', :OLD.BROKER_CD, :NEW.BROKER_CD), 
         DECODE(v_opCode, 'D', :OLD.EQUILEND_ID, :NEW.EQUILEND_ID), 
         DECODE(v_opCode, 'D', :OLD.SECURITY_ID, :NEW.SECURITY_ID), 
         DECODE(v_opCode, 'D', :OLD.SECURITY_ID_TYPE, :NEW.SECURITY_ID_TYPE), 
         DECODE(v_opCode, 'D', :OLD.BORROW_QTY, :NEW.BORROW_QTY), 
         DECODE(v_opCode, 'D', :OLD.RATE, :NEW.RATE), 
         DECODE(v_opCode, 'D', :OLD.RATE_TYPE, :NEW.RATE_TYPE), 
         DECODE(v_opCode, 'D', :OLD.BANCHMARK, :NEW.BANCHMARK),
         DECODE(v_opCode, 'D', :OLD.RESET_INTERVAL, :NEW.RESET_INTERVAL), 
         DECODE(v_opCode, 'D', :OLD.FEE, :NEW.FEE),
         DECODE(v_opCode, 'D', :OLD.FEE_TYPE, :NEW.FEE_TYPE),
		 DECODE(v_opCode, 'D', :OLD.PRICE_CURRENCY_CD, :NEW.PRICE_CURRENCY_CD), 
         DECODE(v_opCode, 'D', :OLD.CASHAMOUNT, :NEW.CASHAMOUNT), 
         DECODE(v_opCode, 'D', :OLD.RECLAIM_RATE, :NEW.RECLAIM_RATE),
         DECODE(v_opCode, 'D', :OLD.MOD2, :NEW.MOD2),
         DECODE(v_opCode, 'D', :OLD.TAX_VOUCHER_DETAILS, :NEW.TAX_VOUCHER_DETAILS), 
         DECODE(v_opCode, 'D', :OLD.CUM_OR_EX_DIVIDEND, :NEW.CUM_OR_EX_DIVIDEND), 
         DECODE(v_opCode, 'D', :OLD.MINIMUM_FEE, :NEW.MINIMUM_FEE), 
         DECODE(v_opCode, 'D', :OLD.PREPAY_RATE, :NEW.PREPAY_RATE), 
         DECODE(v_opCode, 'D', :OLD.BILLING_PRICE, :NEW.BILLING_PRICE), 
         DECODE(v_opCode, 'D', :OLD.MINIMUM_FEE_CD, :NEW.MINIMUM_FEE_CD), 
         DECODE(v_opCode, 'D', :OLD.BILLING_FXRATE, :NEW.BILLING_FXRATE),
         DECODE(v_opCode, 'D', :OLD.BILLING_CASHAMOUNT, :NEW.BILLING_CASHAMOUNT),
         DECODE(v_opCode, 'D', :OLD.BILL_DERIVATION_IND, :NEW.BILL_DERIVATION_IND),
         DECODE(v_opCode, 'D', :OLD.EQL_COLLATERAL_TYPE, :NEW.EQL_COLLATERAL_TYPE), 
         DECODE(v_opCode, 'D', :OLD.EQL_COLLATERAL_TYPE_DESC, :NEW.EQL_COLLATERAL_TYPE_DESC), 
         DECODE(v_opCode, 'D', :OLD.COLLATERAL_MARGIN, :NEW.COLLATERAL_MARGIN), 
         DECODE(v_opCode, 'D', :OLD.AMOUNT, :NEW.AMOUNT), 
         DECODE(v_opCode, 'D', :OLD.CONTRACT_PRICE, :NEW.CONTRACT_PRICE),
         DECODE(v_opCode, 'D', :OLD.CONTRACT_VALUE, :NEW.CONTRACT_VALUE), 
         DECODE(v_opCode, 'D', :OLD.COLLATERAL_CURRENCY_CD, :NEW.COLLATERAL_CURRENCY_CD), 
         DECODE(v_opCode, 'D', :OLD.COLLATERAL_FXRATE, :NEW.COLLATERAL_FXRATE), 
         DECODE(v_opCode, 'D', :OLD.TRADE_DATE, :NEW.TRADE_DATE), 
         DECODE(v_opCode, 'D', :OLD.SETTLE_DATE, :NEW.SETTLE_DATE), 
         DECODE(v_opCode, 'D', :OLD.PREPAY_DATE, :NEW.PREPAY_DATE),
		 DECODE(v_opCode, 'D', :OLD.TERM_DATE, :NEW.TERM_DATE), 
         DECODE(v_opCode, 'D', :OLD.TERM_TYPE, :NEW.TERM_TYPE), 
         DECODE(v_opCode, 'D', :OLD.CALLABLE_DATE, :NEW.CALLABLE_DATE), 
         DECODE(v_opCode, 'D', :OLD.SETTLEMENT_TYPE, :NEW.SETTLEMENT_TYPE), 
         DECODE(v_opCode, 'D', :OLD.BORR_SETTLE_INSTRID, :NEW.BORR_SETTLE_INSTRID), 
         DECODE(v_opCode, 'D', :OLD.LEND_SETTLE_INSTRID, :NEW.LEND_SETTLE_INSTRID), 
         DECODE(v_opCode, 'D', :OLD.LOG_NUMBER, :NEW.LOG_NUMBER), 
         DECODE(v_opCode, 'D', :OLD.PRIVATE_COMMENTS, :NEW.PRIVATE_COMMENTS), 
         DECODE(v_opCode, 'D', :OLD.CALLABLE_INDICATOR, :NEW.CALLABLE_INDICATOR), 
         DECODE(v_opCode, 'D', :OLD.CALLBACK_INDICATOR, :NEW.CALLBACK_INDICATOR),
         DECODE(v_opCode, 'D', :OLD.STATUS, :NEW.STATUS),
         DECODE(v_opCode, 'D', :OLD.STATUS_MSG, :NEW.STATUS_MSG),
         DECODE(v_opCode, 'D', :OLD.HOLDBACK_FLAG, :NEW.HOLDBACK_FLAG),
         substr(NVL(SYS_CONTEXT('USERENV','CLIENT_IDENTIFIER'), 
                    sys_context('USERENV','OS_USER') || '@' || sys_context('USERENV','HOST')),1,32),
         SYSDATE,
         v_opCode
   );

END GEC_SHTT_ABNO_MSG_DTL_TA;
/