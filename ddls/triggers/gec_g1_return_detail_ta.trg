CREATE OR REPLACE TRIGGER GEC_G1_RETURN_DETAIL_TA                                                                                                               
   BEFORE INSERT OR UPDATE OR DELETE OF 
         G1_RETURN_DETAIL_ID, 
         ASSET_ID, 
         AREA_ID, 
         LEGAL_ENTITY_CD, 
         BARGAIN_REF, 
         BROKER_CD, 
         RATE, 
         FEE, 
         RECLAIM_RATE, 
         SETTLE_DATE, 
         TRADE_DATE, 
         TRANSACTION_TYPE, 
         G1_STATUS, 
         G1_STATUS_MSG, 
         GEC_STATUS, 
         GEC_STATUS_MSG, 
         EQL_STATUS, 
         EQL_STATUS_MSG, 
         CREATED_AT, 
         CREATED_BY, 
         UPDATED_AT, 
         UPDATED_BY, 
         CPTY, 
         RETURN_PRICE, 
         RETURN_VALUE, 
         OLD_RETURN_PRICE, 
         OLD_RETURN_VALUE, 
         EQL_ELIGIBLE_FLAG, 
         EQL_RETURN_ID, 
         QTY, 
         EQL_UPDATE_REASON_CD, 
         EQL_UPDATE_REASON_COMMENT, 
         COLLATERAL_CURRENCY_CD, 
         EQL_COLLATERAL_TYPE, 
         ACCEPT_IN_LOTS_FLAG,
         TERM_DATE,
		 DOMESTIC_TAX_PERCENTAGE,
		 EXPECTED_RETURN_DATE,
		 OVERSEAS_TAX_PERCENTAGE       
   ON GEC_G1_RETURN_DETAIL
   FOR EACH ROW                                                                                                                                          
DECLARE
   v_opCode CHAR(1); 
BEGIN
   v_opCode := CASE WHEN INSERTING THEN 'I'
                    WHEN UPDATING  THEN 'U'
                    WHEN DELETING  THEN 'D'
               END;
   IF v_opCode = 'I' OR v_opCode = 'U'
   THEN
   :new.LAST_UPDATED_AT := sysdate;
   :new.LAST_UPDATED_BY := substr(NVL(SYS_CONTEXT('USERENV','CLIENT_IDENTIFIER'), 
   	   sys_context('USERENV','OS_USER')|| '@' || sys_context('USERENV','HOST')),1,32);
   END IF;

   INSERT INTO GEC_G1_RETURN_DETAIL_AUD(
         G1_RETURN_DETAIL_ID, 
         ASSET_ID, 
         AREA_ID, 
         LEGAL_ENTITY_CD, 
         BARGAIN_REF, 
         BROKER_CD, 
         RATE, 
         FEE, 
         RECLAIM_RATE, 
         SETTLE_DATE, 
         TRADE_DATE, 
         TRANSACTION_TYPE, 
         G1_STATUS, 
         G1_STATUS_MSG, 
         GEC_STATUS, 
         GEC_STATUS_MSG, 
         EQL_STATUS, 
         EQL_STATUS_MSG, 
         CREATED_AT, 
         CREATED_BY, 
         UPDATED_AT, 
         UPDATED_BY, 
         CPTY, 
         RETURN_PRICE, 
         RETURN_VALUE, 
         OLD_RETURN_PRICE, 
         OLD_RETURN_VALUE, 
         EQL_ELIGIBLE_FLAG, 
         EQL_RETURN_ID, 
         QTY, 
         EQL_UPDATE_REASON_CD, 
         EQL_UPDATE_REASON_COMMENT, 
         COLLATERAL_CURRENCY_CD, 
         EQL_COLLATERAL_TYPE, 
         ACCEPT_IN_LOTS_FLAG,
         TERM_DATE,
		 DOMESTIC_TAX_PERCENTAGE,
		 EXPECTED_RETURN_DATE,
		 OVERSEAS_TAX_PERCENTAGE,   
         LAST_UPDATED_BY,
         LAST_UPDATED_AT,
         OP_CODE
      )
   VALUES (
         DECODE(v_opCode, 'D', :OLD.G1_RETURN_DETAIL_ID, :NEW.G1_RETURN_DETAIL_ID), 
         DECODE(v_opCode, 'D', :OLD.ASSET_ID, :NEW.ASSET_ID), 
         DECODE(v_opCode, 'D', :OLD.AREA_ID, :NEW.AREA_ID), 
         DECODE(v_opCode, 'D', :OLD.LEGAL_ENTITY_CD, :NEW.LEGAL_ENTITY_CD), 
         DECODE(v_opCode, 'D', :OLD.BARGAIN_REF, :NEW.BARGAIN_REF), 
         DECODE(v_opCode, 'D', :OLD.BROKER_CD, :NEW.BROKER_CD), 
         DECODE(v_opCode, 'D', :OLD.RATE, :NEW.RATE), 
         DECODE(v_opCode, 'D', :OLD.FEE, :NEW.FEE), 
         DECODE(v_opCode, 'D', :OLD.RECLAIM_RATE, :NEW.RECLAIM_RATE), 
         DECODE(v_opCode, 'D', :OLD.SETTLE_DATE, :NEW.SETTLE_DATE), 
         DECODE(v_opCode, 'D', :OLD.TRADE_DATE, :NEW.TRADE_DATE), 
         DECODE(v_opCode, 'D', :OLD.TRANSACTION_TYPE, :NEW.TRANSACTION_TYPE), 
         DECODE(v_opCode, 'D', :OLD.G1_STATUS, :NEW.G1_STATUS), 
         DECODE(v_opCode, 'D', :OLD.G1_STATUS_MSG, :NEW.G1_STATUS_MSG), 
         DECODE(v_opCode, 'D', :OLD.GEC_STATUS, :NEW.GEC_STATUS), 
         DECODE(v_opCode, 'D', :OLD.GEC_STATUS_MSG, :NEW.GEC_STATUS_MSG), 
         DECODE(v_opCode, 'D', :OLD.EQL_STATUS, :NEW.EQL_STATUS), 
         DECODE(v_opCode, 'D', :OLD.EQL_STATUS_MSG, :NEW.EQL_STATUS_MSG), 
         DECODE(v_opCode, 'D', :OLD.CREATED_AT, :NEW.CREATED_AT), 
         DECODE(v_opCode, 'D', :OLD.CREATED_BY, :NEW.CREATED_BY), 
         DECODE(v_opCode, 'D', :OLD.UPDATED_AT, :NEW.UPDATED_AT), 
         DECODE(v_opCode, 'D', :OLD.UPDATED_BY, :NEW.UPDATED_BY), 
         DECODE(v_opCode, 'D', :OLD.CPTY, :NEW.CPTY), 
         DECODE(v_opCode, 'D', :OLD.RETURN_PRICE, :NEW.RETURN_PRICE), 
         DECODE(v_opCode, 'D', :OLD.RETURN_VALUE, :NEW.RETURN_VALUE), 
         DECODE(v_opCode, 'D', :OLD.OLD_RETURN_PRICE, :NEW.OLD_RETURN_PRICE), 
         DECODE(v_opCode, 'D', :OLD.OLD_RETURN_VALUE, :NEW.OLD_RETURN_VALUE), 
         DECODE(v_opCode, 'D', :OLD.EQL_ELIGIBLE_FLAG, :NEW.EQL_ELIGIBLE_FLAG), 
         DECODE(v_opCode, 'D', :OLD.EQL_RETURN_ID, :NEW.EQL_RETURN_ID), 
         DECODE(v_opCode, 'D', :OLD.QTY, :NEW.QTY), 
         DECODE(v_opCode, 'D', :OLD.EQL_UPDATE_REASON_CD, :NEW.EQL_UPDATE_REASON_CD), 
         DECODE(v_opCode, 'D', :OLD.EQL_UPDATE_REASON_COMMENT, :NEW.EQL_UPDATE_REASON_COMMENT), 
         DECODE(v_opCode, 'D', :OLD.COLLATERAL_CURRENCY_CD, :NEW.COLLATERAL_CURRENCY_CD), 
         DECODE(v_opCode, 'D', :OLD.EQL_COLLATERAL_TYPE, :NEW.EQL_COLLATERAL_TYPE), 
         DECODE(v_opCode, 'D', :OLD.ACCEPT_IN_LOTS_FLAG, :NEW.ACCEPT_IN_LOTS_FLAG),
         DECODE(v_opCode, 'D', :OLD.TERM_DATE, :NEW.TERM_DATE),
         DECODE(v_opCode, 'D', :OLD.DOMESTIC_TAX_PERCENTAGE, :NEW.DOMESTIC_TAX_PERCENTAGE),
         DECODE(v_opCode, 'D', :OLD.EXPECTED_RETURN_DATE, :NEW.EXPECTED_RETURN_DATE),
         DECODE(v_opCode, 'D', :OLD.OVERSEAS_TAX_PERCENTAGE, :NEW.OVERSEAS_TAX_PERCENTAGE),
         substr(NVL(SYS_CONTEXT('USERENV','CLIENT_IDENTIFIER'), 
                    sys_context('USERENV','OS_USER') || '@' || sys_context('USERENV','HOST')),1,32),
         SYSDATE,
         v_opCode
   );

END GEC_G1_RETURN_DETAIL_TA;
/
