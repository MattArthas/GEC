CREATE OR REPLACE TYPE GEC_STRCAT_TP AS OBJECT
(
    CURRENTSTR VARCHAR2(4000), 

    CURRENTSEPRATOR VARCHAR2(8), 

    STATIC FUNCTION ODCIAGGREGATEINITIALIZE(SCTX IN OUT GEC_STRCAT_TP) RETURN NUMBER,

    MEMBER FUNCTION ODCIAGGREGATEITERATE(SELF IN OUT GEC_STRCAT_TP, 
                                         VALUE IN VARCHAR2
                                        ) RETURN NUMBER,

    MEMBER FUNCTION ODCIAGGREGATETERMINATE(SELF        IN GEC_STRCAT_TP, 
                                           RETURNVALUE OUT VARCHAR2, 
                                           FLAGS       IN NUMBER
                                           ) RETURN NUMBER,

    MEMBER FUNCTION ODCIAGGREGATEMERGE(SELF IN OUT GEC_STRCAT_TP, 
                                       CTX2 IN GEC_STRCAT_TP) RETURN NUMBER
  );
/

CREATE OR REPLACE TYPE BODY GEC_STRCAT_TP 
IS 
    STATIC FUNCTION ODCIAGGREGATEINITIALIZE(SCTX IN OUT GEC_STRCAT_TP) RETURN NUMBER IS 
    BEGIN
        SCTX := GEC_STRCAT_TP('',';');
        RETURN ODCICONST.SUCCESS;
    END;

    MEMBER FUNCTION ODCIAGGREGATEITERATE(SELF IN OUT GEC_STRCAT_TP, VALUE IN VARCHAR2) RETURN NUMBER IS
    BEGIN
        IF SELF.CURRENTSTR IS NULL THEN
            SELF.CURRENTSTR := VALUE;
        ELSE
            SELF.CURRENTSTR := SELF.CURRENTSTR ||CURRENTSEPRATOR || VALUE;
        END IF;
        RETURN ODCICONST.SUCCESS;
    END;

    MEMBER FUNCTION ODCIAGGREGATETERMINATE(SELF IN GEC_STRCAT_TP, RETURNVALUE OUT VARCHAR2, FLAGS IN NUMBER) RETURN NUMBER IS
    BEGIN
        RETURNVALUE := SELF.CURRENTSTR;
        RETURN ODCICONST.SUCCESS;
    END;

    MEMBER FUNCTION ODCIAGGREGATEMERGE(SELF IN OUT GEC_STRCAT_TP, CTX2 IN GEC_STRCAT_TP) RETURN NUMBER IS
    BEGIN
        IF CTX2.CURRENTSTR IS NULL THEN
            SELF.CURRENTSTR := SELF.CURRENTSTR;
        ELSIF SELF.CURRENTSTR IS NULL THEN 
            SELF.CURRENTSTR := CTX2.CURRENTSTR;
        ELSE
            SELF.CURRENTSTR := SELF.CURRENTSTR || CURRENTSEPRATOR || CTX2.CURRENTSTR;
        END IF; 
            RETURN ODCICONST.SUCCESS;
    END;
END;
/
