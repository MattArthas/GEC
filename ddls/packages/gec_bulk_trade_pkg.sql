-------------------------------------------------------------------------
-- Copyright (c) 2009 State Street Bank and Trust Corp.
-- 225 Franklin Street, Boston, MA 02110, U.S.A.
-- All rights reserved.
--
-- "GEC_FLIP_TRADE_PKG.sql is the copyrighted,
-- proprietary property of State Street Bank and Trust Company and its
-- subsidiaries and affiliates which retain all right, title and interest
-- therein."
--
-- Revision History
--
-- Date            Programmer                Notes
-- ------------    --------------------      ----------------------------
-- Dec 10, 2012		Zhou, Hongyang				 created
-------------------------------------------------------------------------
create or replace PACKAGE GEC_BULK_TRADE_PKG 
AS                                                 
   	PROCEDURE VALIDATE_BULK_TRADE(p_is_copy IN VARCHAR2,p_btList_cursor out SYS_REFCURSOR);
   	PROCEDURE VLD_BULK_TRADE_PREPAY_DATE(var_prepay_date NUMBER,
                                        var_coll_code IN VARCHAR2,
                                        var_error_code IN OUT VARCHAR2);
   	PROCEDURE VALIDATE_CPTY_AND_POSTING_TYPE(p_cpty IN VARCHAR2,
                                        p_posting_type IN OUT VARCHAR2,
                                        p_trade_cnty IN VARCHAR2,
                                        var_dml_broker_cd OUT VARCHAR2,
                                        var_broker_cd OUT VARCHAR2,
                                        var_trans_type OUT VARCHAR2,
                                        var_coll_code OUT VARCHAR2,
                                        var_coll_type OUT VARCHAR2,
                                        var_found_flag OUT NUMBER);
	PROCEDURE BULK_RT_VALID_ASSET_CODE(p_assetCode IN VARCHAR2,
												p_valid OUT VARCHAR2,
												p_error_msg OUT VARCHAR2,
												p_bulk_return_cursor OUT SYS_REFCURSOR);
	PROCEDURE SAVE_PASTED_BULK_RETURN(p_bulkReturn OUT SYS_REFCURSOR,
										p_retMsgContents OUT SYS_REFCURSOR,
										p_errorCode	OUT VARCHAR2);	
	PROCEDURE VALIDATE_BULK_RETURN(r_bulkReturn OUT SYS_REFCURSOR);	
	PROCEDURE STATUS_VALIDATE_BAR_CPTY_PTYPE(var_valid IN OUT VARCHAR2,
												var_BARGAIN_REF IN VARCHAR2,
												var_COUNTERPARTY_CD IN VARCHAR2,
												var_TRANSACTION_TYPE IN VARCHAR2);
	PROCEDURE SAVE_UI_BULK_RETURN(r_bulkReturn OUT SYS_REFCURSOR);
END GEC_BULK_TRADE_PKG;
/

create or replace PACKAGE BODY GEC_BULK_TRADE_PKG
AS
	PROCEDURE VALIDATE_BULK_TRADE(p_is_copy IN VARCHAR2,p_btList_cursor out SYS_REFCURSOR) AS
        V_BULK_G1_TRADE_TEMP GEC_BULK_G1_TRADE_TEMP%ROWTYPE;
        VAR_FOUND_FLAG NUMBER;
        VAR_ASSET_CODE_TYPE GEC_ASSET_IDENTIFIER.ASSET_CODE_TYPE%TYPE;
        VAR_STATUS VARCHAR2(1);
        VAR_ASSET_RS  GEC_ASSET_TP_ARRAY;
        VAR_BROKER_COUNT NUMBER;
        VAR_ASSET_TYPE_ID GEC_ASSET.ASSET_TYPE_ID%TYPE;
        VAR_CLEAN_PRICE  GEC_ASSET.CLEAN_PRICE%TYPE;
        VAR_DIRTY_PRICE GEC_ASSET.CLEAN_PRICE%TYPE;
        VAR_BORROW_COUNT_OF_SAME_ASSET  NUMBER(3);
        VAR_FROM_TIMEZONE  GEC_TRADE_COUNTRY.LOCALE%TYPE;
        VAR_TO_TIMEZONE GEC_TRADE_COUNTRY.LOCALE%TYPE;
        VAR_CUTOFF_TIME GEC_TRADE_COUNTRY.CUTOFF_TIME%TYPE;
        VAR_TRADE_COUNTRY_CD GEC_TRADE_COUNTRY.CURRENCY_CD%TYPE;
        VAR_COLL_CODE_TRADE_COUNTRY_CD GEC_TRADE_COUNTRY.CURRENCY_CD%TYPE;
        VAR_PRICE_DATE GEC_ASSET.PRICE_DATE%TYPE;
        VAR_PRICE_CURRENCY GEC_ASSET.PRICE_CURRENCY_CD%TYPE;
        VAR_BOOK_G1_BORROW_FLAG GEC_BROKER.BOOK_G1_BORROW_FLAG%TYPE;
        VAR_BUSINESS_DAY DATE;
        VAR_DPS GEC_BROKER.NOU_US_DPS%TYPE;  
        VAR_EXCHANGE_DATE GEC_EXCHANGE_RATE.EXCHANGE_DATE%TYPE;  
        VAR_SECURITY_EXCHANGE_DATE GEC_EXCHANGE_RATE.EXCHANGE_DATE%TYPE; 
        VAR_VALIDATE_DATE_RESULT VARCHAR2(10);
        VAR_STALE_EXCHANGE_PRICE VARCHAR2(10);
        VAR_STALE_SECURITY_CUR VARCHAR2(10);
        VAR_PASSED CHAR(1);
        VAR_TRD_CNTY_COUNT NUMBER;
        VAR_IS_CPTY_VALID CHAR(1);
        VAR_IS_PT_VALID CHAR(1);
        VAR_TRD_CPTY_COUNT NUMBER;
        VAR_COLL_CODE_COUNT NUMBER;
        VAR_COLL_TYPE_COUNT NUMBER;
        --gec2.0 misc change--start---
        VAR_PREPAYDAY GEC_TRADE_COUNTRY.PREPAY_DATE_VALUE%TYPE;
        VAR_DML_BROKER_CODE VARCHAR2(10);
        VAR_AGENCY_FLAG GEC_BROKER.AGENCY_FLAG%TYPE;
        VAR_IS_INVALID_COLL_CODE CHAR(1):= 'N';
        VAR_IS_INVALID_COLL_TYPE CHAR(1):= 'N';
        VAR_IS_INVALID_MIN_CD CHAR(1):= 'N';
        VAR_IS_INVALID_PREPAY_DATE CHAR(1):= 'N';
        VAR_IS_INVALID_PREPAY_RATE CHAR(1):= 'N';
        VAR_IS_INVALID_PRICE CHAR(1):= 'N';
        --GEC2.1 CHANGE CQ-PRTLB01269491
		VAR_BORROW_REQUEST_TYPE GEC_BROKER.BORROW_REQUEST_TYPE%TYPE;
        V_PROCEDURE_NAME CONSTANT VARCHAR2(61) := 'GEC_BULK_TRADE_PKG.GEC_BULK_TRADE_PKG';
	      CURSOR V_CUR_BULK_TRADELIST IS
	          SELECT GBT.BULK_G1_TRADE_ID,
                  GBT.ASSET_ID,
                  GBT.SETTLE_DATE,
                  GBT.TRADE_DATE,
                  GBT.STATUS,
                  GBT.STATUS_MSG,
                  GBT.G1_STATUS,
                  GBT.G1_STATUS_MSG,
                  GBT.TRANSACTION_TYPE,
                  GBT.COUNTERPARTY_CD,
                  GBT.SHARE_QTY,
                  GBT.PRICE,
                  GBT.RATE,
                  GBT.RECLAIM_RATE,
                  GBT.ASSET_CODE,
                  GBT.ERROR_CODE,
                  GBT.DOMESTIC_TAX_PERCENTAGE,
                  GBT.PREPAY_DATE,
                  GBT.PREPAY_RATE,
                  GBT.COLLATERAL_CURRENCY_CD,
                  GBT.COMMENT_TXT,
                  GBT.EXPECTED_RETURN_DATE,
                  GBT.TERM_DATE,
                  GBT.DEFAULT_TRADE_DATE,
                  GBT.MINIMUM_FEE,
                  GBT.MINIMUM_FEE_CD,
                  GBT.OVERSEAS_TAX_PERCENTAGE,
                  GBT.COLLATERAL_TYPE,
                  GBT.UPDATED_AT,
                  GBT.CROSS_TRADE_FLAG,
                  GBT.INTER_COMPANY_FLAG
            FROM GEC_BULK_G1_TRADE_TEMP GBT;
  BEGIN
      VAR_FROM_TIMEZONE := 'AMERICA/NEW_YORK';
      VAR_TO_TIMEZONE := 'AMERICA/NEW_YORK';
      VAR_VALIDATE_DATE_RESULT := 'N';
      VAR_STALE_EXCHANGE_PRICE := 'N';
      VAR_STALE_SECURITY_CUR := 'N';
      GEC_LOG_PKG.LOG_PERFORMANCE_START(V_PROCEDURE_NAME);
      FOR V_TEMP_BULK_TRADE IN V_CUR_BULK_TRADELIST LOOP
       IF V_TEMP_BULK_TRADE.STATUS <> GEC_CONSTANTS_PKG.C_BULK_TRADE_BOOKED AND V_TEMP_BULK_TRADE.STATUS <> GEC_CONSTANTS_PKG.C_BULK_TRADE_EXPIRED THEN
         VAR_PASSED :='Y';
         V_BULK_G1_TRADE_TEMP.PRICE := V_TEMP_BULK_TRADE.PRICE;
         V_BULK_G1_TRADE_TEMP.ERROR_CODE :=V_TEMP_BULK_TRADE.ERROR_CODE;
         IF p_is_copy = 'Y' THEN
            --COLL CODE
            IF INSTR(V_BULK_G1_TRADE_TEMP.ERROR_CODE,'VLD0306')>0 THEN
              VAR_IS_INVALID_COLL_CODE :='Y';
            ELSE
              VAR_IS_INVALID_COLL_CODE :='N';
            END IF;
            -- COLL TYPE
            IF INSTR(V_BULK_G1_TRADE_TEMP.ERROR_CODE,'VLD0309')>0 THEN
              VAR_IS_INVALID_COLL_TYPE :='Y';
            ELSE
              VAR_IS_INVALID_COLL_TYPE :='N';
            END IF;
            -- MIN FEE CURRENCY
            IF INSTR(V_BULK_G1_TRADE_TEMP.ERROR_CODE,'VLD0346')>0 THEN
              VAR_IS_INVALID_MIN_CD :='Y';
            ELSE
              VAR_IS_INVALID_MIN_CD :='N';
            END IF;
            -- PREPAY DATE
            IF INSTR(V_BULK_G1_TRADE_TEMP.ERROR_CODE,'VLD0331')>0 THEN
              VAR_IS_INVALID_PREPAY_DATE :='Y';
            ELSE
              VAR_IS_INVALID_PREPAY_DATE :='N';
            END IF;
            -- PREPAY RATE
            IF INSTR(V_BULK_G1_TRADE_TEMP.ERROR_CODE,'VLD0349')>0 THEN
              VAR_IS_INVALID_PREPAY_RATE :='Y';
            ELSE
              VAR_IS_INVALID_PREPAY_RATE :='N';
            END IF;
            -- PRICE
            IF INSTR(V_BULK_G1_TRADE_TEMP.ERROR_CODE,'VLD0339')>0 THEN
              VAR_IS_INVALID_PRICE :='Y';
            ELSE
              VAR_IS_INVALID_PRICE :='N';
            END IF;
         END IF;
         --validate asset code
         IF V_TEMP_BULK_TRADE.ASSET_CODE IS NULL THEN
              V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0300' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0300' END);
              VAR_PASSED :='N';
         ELSIF V_TEMP_BULK_TRADE.ASSET_ID IS NOT NULL THEN
         	V_BULK_G1_TRADE_TEMP.ASSET_ID := V_TEMP_BULK_TRADE.ASSET_ID;
            BEGIN
              SELECT GA.TRADE_COUNTRY_CD, GTC.LOCALE INTO VAR_TRADE_COUNTRY_CD,VAR_TO_TIMEZONE
              FROM GEC_ASSET GA
              LEFT JOIN GEC_TRADE_COUNTRY GTC
              ON GA.TRADE_COUNTRY_CD = GTC.TRADE_COUNTRY_CD
              WHERE GA.ASSET_ID =  V_BULK_G1_TRADE_TEMP.ASSET_ID;               
            EXCEPTION WHEN NO_DATA_FOUND THEN                          
              V_BULK_G1_TRADE_TEMP.ASSET_CODE := V_TEMP_BULK_TRADE.ASSET_CODE;
            END;     
         ELSE         
	        	GEC_VALIDATION_PKG.VALIDATE_ASSET_ID(NULL, 
	                                             NULL,
	                                             NULL,
	                                             NULL,
	                                             NULL,
	                                             NULL,
	                                             NULL,
	                                             V_TEMP_BULK_TRADE.ASSET_CODE,
	                                             NULL,
	                                             VAR_FOUND_FLAG, 
	                                             VAR_ASSET_CODE_TYPE,
	                                             VAR_STATUS ,
	                                             VAR_ASSET_RS);
	         	IF VAR_FOUND_FLAG = 1 AND VAR_ASSET_RS.COUNT = 1 THEN
	              	V_BULK_G1_TRADE_TEMP.ASSET_ID := VAR_ASSET_RS(VAR_ASSET_RS.FIRST).ASSET_ID;
                  	BEGIN
                    	  SELECT GA.TRADE_COUNTRY_CD, GTC.LOCALE INTO VAR_TRADE_COUNTRY_CD,VAR_TO_TIMEZONE
                    	  FROM GEC_ASSET GA
                    	  LEFT JOIN GEC_TRADE_COUNTRY GTC
                    	  ON GA.TRADE_COUNTRY_CD = GTC.TRADE_COUNTRY_CD
                    	  WHERE GA.ASSET_ID =  V_BULK_G1_TRADE_TEMP.ASSET_ID;               
                        V_BULK_G1_TRADE_TEMP.ASSET_CODE := V_TEMP_BULK_TRADE.ASSET_CODE;
                    EXCEPTION WHEN NO_DATA_FOUND THEN                          
                       	  V_BULK_G1_TRADE_TEMP.ASSET_CODE := V_TEMP_BULK_TRADE.ASSET_CODE;
                  	END;
                  	UPDATE GEC_BULK_G1_TRADE SET ASSET_ID = V_BULK_G1_TRADE_TEMP.ASSET_ID WHERE BULK_G1_TRADE_ID = V_TEMP_BULK_TRADE.BULK_G1_TRADE_ID; 
            --IF THE ASSET_CODE IS NOT NULL BUT IS INCORRECT SO BLANK THE PRICE AND ASSET_CODE
	         	ELSIF VAR_FOUND_FLAG >= 2 THEN
                    V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0302' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0302' END);
                    VAR_PASSED :='N';
	         	ELSE 
                    V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0301' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0301' END);
                    VAR_PASSED :='N';
            END IF;
	     	END IF;
        
        --VALIDATE POSTING TYPE
        VAR_IS_PT_VALID :='Y';
        IF V_TEMP_BULK_TRADE.TRANSACTION_TYPE IS NULL THEN
          V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0315' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0315' END);
          VAR_IS_PT_VALID :='N';
          VAR_PASSED :='N';
        ELSIF V_TEMP_BULK_TRADE.TRANSACTION_TYPE<>'L' AND V_TEMP_BULK_TRADE.TRANSACTION_TYPE<>'B' THEN
          V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0316' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0316' END);
          VAR_IS_PT_VALID :='N';
          VAR_PASSED :='N';
        END IF;

        --VALIDATE CPTY
        VAR_IS_CPTY_VALID :='Y';
        IF V_TEMP_BULK_TRADE.COUNTERPARTY_CD IS NULL THEN
          V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0303' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0303' END);
          VAR_IS_CPTY_VALID :='N';
          VAR_PASSED :='N';
        ELSE
        	V_BULK_G1_TRADE_TEMP.TRANSACTION_TYPE :=V_TEMP_BULK_TRADE.TRANSACTION_TYPE;
          VALIDATE_CPTY_AND_POSTING_TYPE(V_TEMP_BULK_TRADE.COUNTERPARTY_CD,
                                                V_BULK_G1_TRADE_TEMP.TRANSACTION_TYPE,
                                                VAR_TRADE_COUNTRY_CD,
                                                VAR_DML_BROKER_CODE,
                                                V_BULK_G1_TRADE_TEMP.BROKER_CD,
                                                V_BULK_G1_TRADE_TEMP.COUNTERPARTY_TYPE,
                                                V_BULK_G1_TRADE_TEMP.DEFAULT_COLLATERAL_CURRENCY_CD,
                                                V_BULK_G1_TRADE_TEMP.DEFAULT_COLLATERAL_TYPE,
                                                VAR_FOUND_FLAG);                        
          IF VAR_IS_PT_VALID = 'Y' AND VAR_FOUND_FLAG = 0 AND VAR_DML_BROKER_CODE IS NULL THEN
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0304' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0304' END);
            VAR_IS_CPTY_VALID :='N';
            VAR_PASSED :='N';
          ELSIF VAR_IS_PT_VALID = 'Y' AND VAR_FOUND_FLAG = 0 THEN
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0305' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0305' END);
              --VAR_IS_CPTY_VALID :='N';
          END IF;
          
          IF p_is_copy = 'Y' AND VAR_FOUND_FLAG=1 THEN
          
             IF V_TEMP_BULK_TRADE.COLLATERAL_CURRENCY_CD IS NULL AND VAR_IS_INVALID_COLL_CODE='N' THEN
                V_TEMP_BULK_TRADE.COLLATERAL_CURRENCY_CD :=V_BULK_G1_TRADE_TEMP.DEFAULT_COLLATERAL_CURRENCY_CD;
                UPDATE GEC_BULK_G1_TRADE SET COLLATERAL_CURRENCY_CD = V_TEMP_BULK_TRADE.COLLATERAL_CURRENCY_CD WHERE BULK_G1_TRADE_ID = V_TEMP_BULK_TRADE.BULK_G1_TRADE_ID; 
             END IF;
             
              IF V_TEMP_BULK_TRADE.COLLATERAL_TYPE IS NULL AND VAR_IS_INVALID_COLL_TYPE='N' THEN
                V_TEMP_BULK_TRADE.COLLATERAL_TYPE :=V_BULK_G1_TRADE_TEMP.DEFAULT_COLLATERAL_TYPE;
                UPDATE GEC_BULK_G1_TRADE SET COLLATERAL_TYPE = V_TEMP_BULK_TRADE.COLLATERAL_TYPE WHERE BULK_G1_TRADE_ID = V_TEMP_BULK_TRADE.BULK_G1_TRADE_ID;     
             END IF;
             
             IF VAR_IS_INVALID_COLL_CODE='N' THEN
               V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0360' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0360' END);
             END IF;
             
             IF VAR_IS_INVALID_COLL_TYPE='N' THEN
               V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0361' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0361' END);
             END IF;
          END IF;
          
        END IF;
        
        --VALIDATE PRICE
        IF V_TEMP_BULK_TRADE.PRICE = GEC_CONSTANTS_PKG.C_BORROW_MIN_PRICE THEN
              V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0089' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0089' END);
              V_BULK_G1_TRADE_TEMP.PRICE := NULL;
              VAR_PASSED :='N';
        END IF;
        
        --CACULATE DEAULT PRICE
        IF VAR_IS_CPTY_VALID = 'Y' AND VAR_IS_PT_VALID = 'Y' AND V_BULK_G1_TRADE_TEMP.ASSET_ID IS NOT NULL THEN
          --gec2.0 misc change--start---
              
           -- END IF;

          IF V_TEMP_BULK_TRADE.COLLATERAL_TYPE IS NOT NULL AND V_TEMP_BULK_TRADE.COLLATERAL_TYPE=GEC_CONSTANTS_PKG.C_BULK_TRADE_CASH THEN
          	V_BULK_G1_TRADE_TEMP.COLLATERAL_TYPE := 'CASH';
          ELSIF V_TEMP_BULK_TRADE.COLLATERAL_TYPE IS NOT NULL AND V_TEMP_BULK_TRADE.COLLATERAL_TYPE=GEC_CONSTANTS_PKG.C_BULK_TRADE_COLLATERAL_TYPE_P THEN
            V_BULK_G1_TRADE_TEMP.COLLATERAL_TYPE := 'POOL';
          ELSE
            V_BULK_G1_TRADE_TEMP.COLLATERAL_TYPE := V_TEMP_BULK_TRADE.COLLATERAL_TYPE;
          END IF;
           V_BULK_G1_TRADE_TEMP.COLLATERAL_CURRENCY_CD := V_TEMP_BULK_TRADE.COLLATERAL_CURRENCY_CD;
         --gec2.0 misc change--end--- 
          
          ----select coll perc, round factor, dps for calculation price
          IF V_BULK_G1_TRADE_TEMP.BROKER_CD IS NOT NULL THEN
          	BEGIN
              SELECT (CASE WHEN VAR_TRADE_COUNTRY_CD = 'US' THEN GB.US_COLLATERAL_PERCENTAGE 
              			   WHEN VAR_TRADE_COUNTRY_CD = 'CA' AND V_BULK_G1_TRADE_TEMP.COLLATERAL_TYPE = 'CASH' AND V_BULK_G1_TRADE_TEMP.COLLATERAL_CURRENCY_CD = 'USD' THEN GB.NONUS_COLLATERAL_PERCENTAGE
              			   WHEN (VAR_TRADE_COUNTRY_CD = 'CA' AND V_BULK_G1_TRADE_TEMP.COLLATERAL_CURRENCY_CD = 'CAD') OR (VAR_TRADE_COUNTRY_CD = 'CA' AND V_BULK_G1_TRADE_TEMP.COLLATERAL_TYPE <> 'CASH') THEN GB.US_COLLATERAL_PERCENTAGE
              			   WHEN VAR_TRADE_COUNTRY_CD <> 'US' AND VAR_TRADE_COUNTRY_CD <> 'CA' THEN GB.NONUS_COLLATERAL_PERCENTAGE
              			   ELSE GB.US_COLLATERAL_PERCENTAGE END) AS COLLATERAL_PERCENTAGE,
              		 (CASE WHEN VAR_TRADE_COUNTRY_CD ='US' THEN GB.US_PRICE_ROUND_FACTOR WHEN VAR_TRADE_COUNTRY_CD ='CA'THEN GB.CA_PRICE_ROUND_FACTOR ELSE GB.NON_US_PRICE_ROUND_FACTOR END) AS PRICE_ROUND_FACTOR,
              		 (CASE WHEN VAR_TRADE_COUNTRY_CD ='US' THEN 7 WHEN VAR_TRADE_COUNTRY_CD = 'CA' THEN CA_DPS ELSE NOU_US_DPS END) AS DPS
              INTO V_BULK_G1_TRADE_TEMP.COLLATERAL_PERCENTAGE, V_BULK_G1_TRADE_TEMP.PRICE_ROUND_FACTOR, VAR_DPS
              FROM GEC_BROKER GB
              WHERE GB.BROKER_CD = V_BULK_G1_TRADE_TEMP.BROKER_CD;
           EXCEPTION WHEN OTHERS THEN
              NULL; 
           END;
          END IF;
          
          -- get the exchange rate, exchange date
          IF V_BULK_G1_TRADE_TEMP.COLLATERAL_CURRENCY_CD IS NOT NULL THEN
            BEGIN
              SELECT er.EXCHANGE_RATE, er.EXCHANGE_DATE INTO V_BULK_G1_TRADE_TEMP.EXCHANGE_RATE, VAR_EXCHANGE_DATE 
              FROM GEC_EXCHANGE_RATE er, GEC_LATEST_EXCHANGE_RATE_VW ler 
              WHERE er.EXCHANGE_CURRENCY_CD = ler.EXCHANGE_CURRENCY_CD AND er.EXCHANGE_DATE = ler.EXCHANGE_DATE AND er.EXCHANGE_CURRENCY_CD = V_BULK_G1_TRADE_TEMP.COLLATERAL_CURRENCY_CD;
              EXCEPTION WHEN NO_DATA_FOUND THEN
              V_BULK_G1_TRADE_TEMP.EXCHANGE_RATE := NULL;
              VAR_EXCHANGE_DATE := NULL;
            END;
          END IF;
          
          -- get asset price , price date, exchange currency
          IF V_BULK_G1_TRADE_TEMP.BROKER_CD IS NOT NULL THEN
              SELECT GA.ASSET_TYPE_ID INTO VAR_ASSET_TYPE_ID
              FROM GEC_ASSET GA
              WHERE GA.ASSET_ID =  V_BULK_G1_TRADE_TEMP.ASSET_ID;                 
              -- get asset price
              BEGIN                      
                  IF VAR_ASSET_TYPE_ID = 4 THEN
                      SELECT  GA.CLEAN_PRICE, GA.PRICE_DATE, GA.PRICE_CURRENCY_CD
                      INTO VAR_CLEAN_PRICE, VAR_PRICE_DATE, VAR_PRICE_CURRENCY
                      FROM GEC_ASSET GA
                      WHERE GA.ASSET_ID = V_BULK_G1_TRADE_TEMP.ASSET_ID;
                  ELSE
                      SELECT  GA.CLEAN_PRICE, GA.DIRTY_PRICE, GA.PRICE_DATE, GA.PRICE_CURRENCY_CD 
                      INTO VAR_CLEAN_PRICE,VAR_DIRTY_PRICE,VAR_PRICE_DATE, VAR_PRICE_CURRENCY
                      FROM GEC_ASSET GA
                      WHERE GA.ASSET_ID =  V_BULK_G1_TRADE_TEMP.ASSET_ID;
                  END IF;
                      
                  IF (VAR_CLEAN_PRICE IS NULL OR (VAR_DIRTY_PRICE IS NULL AND VAR_ASSET_TYPE_ID <> 4)) THEN 
                     V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0102' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0102' END);
                  END IF;
                      
                  IF VAR_PRICE_CURRENCY IS NOT NULL THEN
                    BEGIN		  	 
                      SELECT er.EXCHANGE_RATE, er.EXCHANGE_DATE INTO V_BULK_G1_TRADE_TEMP.SECURITY_EXCHANGE_RATE, VAR_SECURITY_EXCHANGE_DATE 
                      FROM GEC_EXCHANGE_RATE er, GEC_LATEST_EXCHANGE_RATE_VW ler 
                      WHERE er.EXCHANGE_CURRENCY_CD = ler.EXCHANGE_CURRENCY_CD AND er.EXCHANGE_DATE = ler.EXCHANGE_DATE AND er.EXCHANGE_CURRENCY_CD = VAR_PRICE_CURRENCY;
                      EXCEPTION WHEN NO_DATA_FOUND THEN
                      V_BULK_G1_TRADE_TEMP.SECURITY_EXCHANGE_RATE := NULL;
                      VAR_SECURITY_EXCHANGE_DATE := NULL;
                    END; 
                  ELSE
                     V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0340' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0340' END);
                  END IF;                    	  
              END;
              
              --validate stale price
              IF VAR_PRICE_DATE IS NOT  NULL THEN    
                 BEGIN               
                 	VAR_BUSINESS_DAY := GEC_UTILS_PKG.TO_TIMEZONE(sysdate, VAR_FROM_TIMEZONE, VAR_TO_TIMEZONE);
                 	VAR_VALIDATE_DATE_RESULT := GEC_VALIDATION_PKG.VALIDATE_PRICE_DATE(TO_DATE(VAR_PRICE_DATE,'YYYYMMDD'),VAR_BUSINESS_DAY,VAR_TRADE_COUNTRY_CD,'T'); 
                 	IF VAR_VALIDATE_DATE_RESULT = 'N' THEN--MORE THAN TWO DAY 
                     	V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0103' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0103' END);
                     	V_BULK_G1_TRADE_TEMP.IS_STALE_PRICE := 'ON';
                 	END IF;
                 EXCEPTION WHEN NO_DATA_FOUND THEN
                  V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0103' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0103' END);
                  V_BULK_G1_TRADE_TEMP.IS_STALE_PRICE := 'ON';
                 END;
              ELSE
                 V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0103' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0103' END);
                 V_BULK_G1_TRADE_TEMP.IS_STALE_PRICE := 'ON';
              END IF;
          END IF;
          
         GEC_VALIDATION_PKG.VALIDATE_PRICE(V_TEMP_BULK_TRADE.PRICE,
                        V_BULK_G1_TRADE_TEMP.PRICE,
                        V_BULK_G1_TRADE_TEMP.DEFAULT_PRICE,
                        V_BULK_G1_TRADE_TEMP.ASSET_ID,
                        V_BULK_G1_TRADE_TEMP.BROKER_CD,
                        VAR_TRADE_COUNTRY_CD,
                        V_BULK_G1_TRADE_TEMP.PRICE_ROUND_FACTOR,
                        VAR_DPS,
                        V_BULK_G1_TRADE_TEMP.EXCHANGE_RATE,
                        VAR_EXCHANGE_DATE,
                        V_BULK_G1_TRADE_TEMP.SECURITY_EXCHANGE_RATE,
                        VAR_SECURITY_EXCHANGE_DATE,
                        V_BULK_G1_TRADE_TEMP.COLLATERAL_PERCENTAGE,
                        VAR_ASSET_TYPE_ID,
                        VAR_CLEAN_PRICE,
                        VAR_DIRTY_PRICE,
                        VAR_FROM_TIMEZONE,
                        VAR_BUSINESS_DAY,
                        VAR_STALE_EXCHANGE_PRICE,
                        VAR_STALE_SECURITY_CUR,
                        V_BULK_G1_TRADE_TEMP.IS_STALE_EXCHANGE_PRICE,
                        VAR_VALIDATE_DATE_RESULT,
                        V_BULK_G1_TRADE_TEMP.ERROR_CODE);
          --gec2.0 misc change--start---
          IF p_is_copy = 'Y' AND V_BULK_G1_TRADE_TEMP.DEFAULT_PRICE IS NOT NULL AND VAR_IS_INVALID_PRICE = 'N' THEN
            IF V_TEMP_BULK_TRADE.PRICE IS NULL THEN
              V_TEMP_BULK_TRADE.PRICE := V_BULK_G1_TRADE_TEMP.DEFAULT_PRICE;
              UPDATE GEC_BULK_G1_TRADE SET PRICE = V_TEMP_BULK_TRADE.PRICE WHERE BULK_G1_TRADE_ID = V_TEMP_BULK_TRADE.BULK_G1_TRADE_ID;
            END IF;
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0366' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0366' END);
          END IF;
          --gec2.0 misc change--end---
          
        END IF;
        
        --gec2.0 misc change--start---
        IF V_TEMP_BULK_TRADE.PRICE IS NULL THEN
              V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0339' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0339' END);
              VAR_PASSED :='N';
        END IF;
        --gec2.0 misc change--end---
        
        --VALIDATE SHARE QTY
        IF V_TEMP_BULK_TRADE.SHARE_QTY IS NULL THEN
          V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0317' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0317' END);
          VAR_PASSED := 'N';
        ELSIF V_TEMP_BULK_TRADE.SHARE_QTY <=0 THEN
          V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0318' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0318' END);
          VAR_PASSED := 'N';
        END IF;

        --VALIDATE RATE
        IF V_TEMP_BULK_TRADE.RATE IS NULL THEN
          V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0321' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0321' END);
          VAR_PASSED := 'N';
        END IF;
        
        --VALIDATE RECLAIM RATE
        IF V_TEMP_BULK_TRADE.RECLAIM_RATE IS NULL THEN
          V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0319' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0319' END);
          VAR_PASSED := 'N';
        END IF;
        
        --VALIDATE CPTY NEED BOOK G1
        IF VAR_IS_CPTY_VALID = 'Y' AND VAR_IS_PT_VALID = 'Y' AND V_TEMP_BULK_TRADE.TRANSACTION_TYPE = 'B' THEN
          BEGIN
            SELECT  BOOK_G1_BORROW_FLAG INTO VAR_BOOK_G1_BORROW_FLAG FROM GEC_BROKER GB WHERE GB.BROKER_CD = V_TEMP_BULK_TRADE.COUNTERPARTY_CD;
            IF VAR_BOOK_G1_BORROW_FLAG='N' THEN
                V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0343' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0343' END);
            END IF;
          EXCEPTION WHEN NO_DATA_FOUND THEN
            NULL;
          END;
        END IF;

        --VALIDATE COLL CODE
        IF V_TEMP_BULK_TRADE.COLLATERAL_CURRENCY_CD IS NULL THEN
          V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0306' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0306' END);
          VAR_PASSED := 'N';
        ELSE
          SELECT COUNT(COLLATERAL_CURRENCY_CD_ID) INTO VAR_COLL_CODE_COUNT FROM GEC_COLLATERAL_CURRENCY_CODE WHERE COLLATERAL_CURRENCY_CD = V_TEMP_BULK_TRADE.COLLATERAL_CURRENCY_CD;
          IF VAR_COLL_CODE_COUNT >=1 THEN
            IF VAR_IS_CPTY_VALID = 'Y' AND VAR_IS_PT_VALID = 'Y' AND VAR_FOUND_FLAG = 1 
              AND V_TEMP_BULK_TRADE.COLLATERAL_CURRENCY_CD <> V_BULK_G1_TRADE_TEMP.DEFAULT_COLLATERAL_CURRENCY_CD THEN
               V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0308' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0308' END);
            END IF;
          ELSE
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0307' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0307' END);
            VAR_PASSED := 'N';
          END IF;
        END IF; 
        
        --VALIDATE MINI FEE CURR
		--GEC2.0 MISC CHANGE START---
		IF  p_is_copy = 'Y' AND VAR_IS_INVALID_MIN_CD='N' THEN
          V_BULK_G1_TRADE_TEMP.DEFAULT_MINIMUM_FEE_CD := V_TEMP_BULK_TRADE.COLLATERAL_CURRENCY_CD;
          IF V_TEMP_BULK_TRADE.MINIMUM_FEE_CD IS NULL THEN
              V_TEMP_BULK_TRADE.MINIMUM_FEE_CD := V_BULK_G1_TRADE_TEMP.DEFAULT_MINIMUM_FEE_CD;
              UPDATE GEC_BULK_G1_TRADE SET MINIMUM_FEE_CD=V_TEMP_BULK_TRADE.MINIMUM_FEE_CD WHERE BULK_G1_TRADE_ID = V_TEMP_BULK_TRADE.BULK_G1_TRADE_ID;
          END IF;
          V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0365' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0365' END);
        END IF;
		--GEC2.0 MISC CHANGE END---

        IF V_TEMP_BULK_TRADE.MINIMUM_FEE IS NOT NULL AND V_TEMP_BULK_TRADE.MINIMUM_FEE_CD IS NULL THEN
          IF VAR_IS_INVALID_MIN_CD='N' THEN
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0337' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0337' END);
          ELSE
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0338' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0338' END);
          END IF;
          VAR_PASSED := 'N';
        ELSIF V_TEMP_BULK_TRADE.MINIMUM_FEE_CD IS NOT NULL THEN
          SELECT COUNT(COLLATERAL_CURRENCY_CD_ID) INTO VAR_COLL_CODE_COUNT FROM GEC_COLLATERAL_CURRENCY_CODE WHERE COLLATERAL_CURRENCY_CD = V_TEMP_BULK_TRADE.MINIMUM_FEE_CD;
          IF VAR_COLL_CODE_COUNT<=0 THEN
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0338' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0338' END);
            VAR_PASSED := 'N';
          END IF;
        END IF;
        
        --VALIDATE COLL TYPE
        IF V_TEMP_BULK_TRADE.COLLATERAL_TYPE IS NULL THEN
          V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0309' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0309' END);
          VAR_PASSED := 'N';
        ELSE
          SELECT COUNT(G1_COLLATERAL_TYPE_ID) INTO VAR_COLL_TYPE_COUNT  FROM GEC_G1_COLLATERAL_TYPE WHERE G1_COLLATERAL_TYPE = V_TEMP_BULK_TRADE.COLLATERAL_TYPE;
          IF VAR_COLL_TYPE_COUNT >=1  THEN
            IF VAR_IS_CPTY_VALID = 'Y' AND VAR_IS_PT_VALID = 'Y' AND VAR_FOUND_FLAG = 1 THEN
              IF V_TEMP_BULK_TRADE.COLLATERAL_TYPE <> V_BULK_G1_TRADE_TEMP.DEFAULT_COLLATERAL_TYPE THEN
                V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0311' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0311' END);
              ELSE
                BEGIN
                  SELECT 
                    AGENCY_FLAG 
                  INTO 
                    VAR_AGENCY_FLAG
                  FROM GEC_BROKER
                  WHERE BROKER_CD = VAR_DML_BROKER_CODE;
                  IF VAR_AGENCY_FLAG<>'Y' THEN
                    V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0368' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0368' END);
                  END IF;
                EXCEPTION WHEN OTHERS THEN 
                  NULL;
                END;
              END IF;
            END IF;
          ELSE
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0310' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0310' END);
            VAR_PASSED := 'N';
          END IF;
        END IF;
        
        --VALIDATE TRADE DATE
        IF V_TEMP_BULK_TRADE.TRADE_DATE IS NULL THEN
          V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0323' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0323' END);
          VAR_PASSED := 'N';
        ELSE
          IF V_TEMP_BULK_TRADE.PREPAY_DATE IS NOT NULL AND V_TEMP_BULK_TRADE.PREPAY_DATE < V_TEMP_BULK_TRADE.TRADE_DATE THEN
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0334' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0334' END);
          END IF;
          IF V_TEMP_BULK_TRADE.SETTLE_DATE IS NOT NULL AND V_TEMP_BULK_TRADE.SETTLE_DATE < V_TEMP_BULK_TRADE.TRADE_DATE THEN
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0330' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0330' END);
          END IF;
          BEGIN
            IF V_BULK_G1_TRADE_TEMP.ASSET_ID IS NOT NULL AND GEC_UTILS_PKG.IS_WORKDAY(TO_DATE(V_TEMP_BULK_TRADE.TRADE_DATE,'YYYY-MM-DD'),VAR_TRADE_COUNTRY_CD,'T') ='N' THEN
                  V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0325' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0325' END);
            END IF; 
          EXCEPTION WHEN OTHERS THEN
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0324' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0324' END);
          END;
          
        END IF;
       
       --gec2.2 change prepay date start
		IF V_TEMP_BULK_TRADE.SETTLE_DATE IS NOT NULL AND V_TEMP_BULK_TRADE.PREPAY_DATE IS NOT NULL AND V_TEMP_BULK_TRADE.PREPAY_DATE > V_TEMP_BULK_TRADE.SETTLE_DATE THEN
			V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0372' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0372' END);
		END IF;	
	   --gec2.2 change prepay date end 
       
       --VALIDATE SETTLE DATE
        IF V_TEMP_BULK_TRADE.SETTLE_DATE IS NOT NULL THEN
         -- THE SETTLEDATE IS NOT A WORKDAY
         BEGIN
          IF V_BULK_G1_TRADE_TEMP.ASSET_ID IS NOT NULL AND GEC_UTILS_PKG.IS_WORKDAY(TO_DATE(V_TEMP_BULK_TRADE.SETTLE_DATE,'YYYY-MM-DD'),VAR_TRADE_COUNTRY_CD,'S') ='N' THEN
                  V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0329' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0329' END);
              -- THE SETTLEDATE IS BEFORE TODAY
          ELSIF  V_BULK_G1_TRADE_TEMP.ASSET_ID IS NOT NULL AND TO_NUMBER(TO_CHAR(GEC_UTILS_PKG.TO_TIMEZONE( SYSDATE ,VAR_FROM_TIMEZONE , VAR_TO_TIMEZONE),'YYYYMMDD')) > V_TEMP_BULK_TRADE.SETTLE_DATE THEN 
                  V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0328' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0328' END);
--                    V_BULK_G1_TRADE_TEMP.ERROR_CODE := 'VLD0074';
             -- AFTER CUT OFF TIME 
          --ELSIF  V_BULK_G1_TRADE_TEMP.ASSET_ID IS NOT NULL AND TO_NUMBER(TO_CHAR(GEC_UTILS_PKG.TO_TIMEZONE( SYSDATE ,VAR_FROM_TIMEZONE , VAR_TO_TIMEZONE),'YYYYMMDD')) = V_TEMP_BULK_TRADE.SETTLE_DATE THEN 
                  --VAR_CUTOFF_TIME := GEC_UTILS_PKG.TO_CUTOFF_TIME(SYSDATE,VAR_FROM_TIMEZONE, VAR_TO_TIMEZONE);  
             --IF V_BULK_G1_TRADE_TEMP.ASSET_ID IS NOT NULL THEN 
               --BEGIN
                --   IF GEC_UTILS_PKG.IS_AFTER_CUTOFF_TIME(V_BULK_G1_TRADE_TEMP.ASSET_ID) =true THEN
                  --     V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0071' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0071' END);
                  -- END IF;
               --END;
            -- END IF;
          ELSE
             --gec2.0 misc change-prepay date-start---
              BEGIN
                IF p_is_copy = 'Y'
                  AND VAR_IS_CPTY_VALID = 'Y' 
                  AND VAR_IS_PT_VALID = 'Y' AND VAR_IS_INVALID_PREPAY_DATE = 'N' THEN
            
                  IF V_BULK_G1_TRADE_TEMP.COUNTERPARTY_TYPE = 'SB' THEN
                      V_BULK_G1_TRADE_TEMP.DEFAULT_PREPAY_DATE :=V_TEMP_BULK_TRADE.SETTLE_DATE;
                  ELSIF V_BULK_G1_TRADE_TEMP.ASSET_ID IS NOT NULL
                  AND V_TEMP_BULK_TRADE.COLLATERAL_CURRENCY_CD IS NOT NULL THEN
                   select nvl(gcbp.PREPAY_DATE_VALUE,tc.PREPAY_DATE_VALUE) as PREPAY_DATE_VALUE   INTO VAR_PREPAYDAY  
            			from gec_trade_country tc
              			join gec_asset ga
              			on tc.trade_country_cd = ga.trade_country_cd
              			left join gec_country_broker_profile gcbp
              			on gcbp.trade_country_cd = tc.trade_country_cd and gcbp.broker_cd = V_BULK_G1_TRADE_TEMP.BROKER_CD
              			where ga.asset_id=V_BULK_G1_TRADE_TEMP.ASSET_ID;
                    SELECT TRADE_COUNTRY_CD INTO VAR_COLL_CODE_TRADE_COUNTRY_CD
                        FROM GEC_TRADE_COUNTRY
                        WHERE currency_cd=V_TEMP_BULK_TRADE.COLLATERAL_CURRENCY_CD;
                  
                        V_BULK_G1_TRADE_TEMP.DEFAULT_PREPAY_DATE :=GEC_UTILS_PKG.GET_TMINUSN_NUM(V_TEMP_BULK_TRADE.SETTLE_DATE,VAR_PREPAYDAY,VAR_COLL_CODE_TRADE_COUNTRY_CD,'S');
                   END IF;
                   IF V_TEMP_BULK_TRADE.PREPAY_DATE IS NULL THEN 
                      V_TEMP_BULK_TRADE.PREPAY_DATE := V_BULK_G1_TRADE_TEMP.DEFAULT_PREPAY_DATE;
                      UPDATE GEC_BULK_G1_TRADE SET PREPAY_DATE = V_TEMP_BULK_TRADE.PREPAY_DATE WHERE BULK_G1_TRADE_ID = V_TEMP_BULK_TRADE.BULK_G1_TRADE_ID;
                   END IF;
                   V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0363' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0363' END);
                 END IF;
              EXCEPTION WHEN OTHERS THEN
                    V_TEMP_BULK_TRADE.PREPAY_DATE :=NULL;
              END;
              --gec2.0 misc change--end---
          END IF;
         EXCEPTION WHEN OTHERS THEN
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0326' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0326' END);
         END;
          IF V_TEMP_BULK_TRADE.TERM_DATE IS NOT NULL  THEN
              IF V_TEMP_BULK_TRADE.SETTLE_DATE >= V_TEMP_BULK_TRADE.TERM_DATE THEN
                BEGIN
                  V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0342' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0342' END);
                END;
              END IF;
          END IF;
        ELSE
          V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0327' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0327' END);
          VAR_PASSED := 'N';
        END IF;
        
        IF V_TEMP_BULK_TRADE.EXPECTED_RETURN_DATE IS NOT NULL  THEN
            IF V_TEMP_BULK_TRADE.SETTLE_DATE IS NOT NULL AND V_TEMP_BULK_TRADE.SETTLE_DATE >= V_TEMP_BULK_TRADE.EXPECTED_RETURN_DATE THEN
                V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0351' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0351' END);
            ELSIF V_TEMP_BULK_TRADE.PREPAY_DATE IS NOT NULL AND V_TEMP_BULK_TRADE.PREPAY_DATE >= V_TEMP_BULK_TRADE.EXPECTED_RETURN_DATE THEN
              	V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0354' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0354' END);
            ELSIF V_TEMP_BULK_TRADE.TRADE_DATE IS NOT NULL AND V_TEMP_BULK_TRADE.TRADE_DATE >= V_TEMP_BULK_TRADE.EXPECTED_RETURN_DATE THEN
              	V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0355' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0355' END);
            END IF;
        END IF;
        
        BEGIN
        IF V_TEMP_BULK_TRADE.EXPECTED_RETURN_DATE IS NOT NULL AND V_BULK_G1_TRADE_TEMP.ASSET_ID IS NOT NULL AND GEC_UTILS_PKG.IS_WORKDAY(TO_DATE(V_TEMP_BULK_TRADE.EXPECTED_RETURN_DATE,'YYYY-MM-DD'),VAR_TRADE_COUNTRY_CD,'S') ='N' THEN
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0352' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0352' END);
        END IF;
        EXCEPTION WHEN OTHERS THEN
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0350' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0350' END);
        END;

        BEGIN
        IF V_TEMP_BULK_TRADE.TERM_DATE IS NOT NULL AND V_BULK_G1_TRADE_TEMP.ASSET_ID IS NOT NULL AND GEC_UTILS_PKG.IS_WORKDAY(TO_DATE(V_TEMP_BULK_TRADE.TERM_DATE,'YYYY-MM-DD'),VAR_TRADE_COUNTRY_CD,'S') ='N' THEN
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0353' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0353' END);
        END IF;
        EXCEPTION WHEN OTHERS THEN
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0344' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0344' END);
        END;
        
        --VALIDATE PREPAY DATE
        IF V_TEMP_BULK_TRADE.PREPAY_DATE IS NULL THEN
          IF VAR_IS_INVALID_PREPAY_DATE = 'N' THEN 
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0331' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0331' END);
          END IF;
          VAR_PASSED := 'N';
        ELSE
          VLD_BULK_TRADE_PREPAY_DATE(V_TEMP_BULK_TRADE.PREPAY_DATE,
                                     V_TEMP_BULK_TRADE.COLLATERAL_CURRENCY_CD,
                                     V_BULK_G1_TRADE_TEMP.ERROR_CODE);
        END IF;

        --VALIDATE PREPAY RATE
        V_BULK_G1_TRADE_TEMP.PREPAY_RATE :=V_TEMP_BULK_TRADE.PREPAY_RATE;
        IF VAR_IS_INVALID_PREPAY_RATE = 'N' AND (V_TEMP_BULK_TRADE.PREPAY_DATE IS NOT NULL AND V_TEMP_BULK_TRADE.SETTLE_DATE IS NOT NULL 
        		OR (VAR_TRADE_COUNTRY_CD<>GEC_CONSTANTS_PKG.C_TRADE_CNTRY_US 
          		AND VAR_TRADE_COUNTRY_CD<>GEC_CONSTANTS_PKG.C_TRADE_CNTRY_CA
              	AND VAR_IS_CPTY_VALID = 'Y'
          		AND V_BULK_G1_TRADE_TEMP.COUNTERPARTY_TYPE = GEC_CONSTANTS_PKG.C_BORROW_REQUEST_NSB)) THEN
          IF V_TEMP_BULK_TRADE.PREPAY_DATE < V_TEMP_BULK_TRADE.SETTLE_DATE 
          		OR (VAR_TRADE_COUNTRY_CD<>GEC_CONSTANTS_PKG.C_TRADE_CNTRY_US 
          		AND VAR_TRADE_COUNTRY_CD<>GEC_CONSTANTS_PKG.C_TRADE_CNTRY_CA
          		AND V_BULK_G1_TRADE_TEMP.COUNTERPARTY_TYPE = GEC_CONSTANTS_PKG.C_BORROW_REQUEST_NSB)THEN --gec2.0 misc change add P validation of coll type
            IF V_TEMP_BULK_TRADE.COLLATERAL_TYPE IS NOT NULL AND (V_TEMP_BULK_TRADE.COLLATERAL_TYPE = GEC_CONSTANTS_PKG.C_BULK_TRADE_CASH OR V_TEMP_BULK_TRADE.COLLATERAL_TYPE = GEC_CONSTANTS_PKG.C_BULK_TRADE_COLLATERAL_TYPE_P)  THEN
              
              --gec2.0 misc change--start-PREPAY RATE--
              BEGIN
                  IF  p_is_copy = 'Y' 
                      AND VAR_IS_CPTY_VALID = 'Y' AND VAR_IS_PT_VALID = 'Y' 
                      AND V_BULK_G1_TRADE_TEMP.ASSET_ID IS NOT NULL THEN
                                    
                      SELECT 
                      NVL(GC.PREPAY_RATE,GIR.RATE) PREPAY_RATE INTO V_BULK_G1_TRADE_TEMP.DEFAULT_PREPAY_RATE
                      FROM    GEC_COUNTERPARTY GC
                      LEFT JOIN GEC_BENCHMARK_INDEX_RATE GIR
                      ON GC.BENCHMARK_INDEX_CD = GIR.BENCHMARK_INDEX_CD
                      WHERE COUNTERPARTY_CD=V_TEMP_BULK_TRADE.COUNTERPARTY_CD
                      AND TRANSACTION_CD= DECODE(V_TEMP_BULK_TRADE.TRANSACTION_TYPE,'B','G1B','G1L');

                      IF V_TEMP_BULK_TRADE.PREPAY_RATE IS NULL THEN
                        V_TEMP_BULK_TRADE.PREPAY_RATE := V_BULK_G1_TRADE_TEMP.DEFAULT_PREPAY_RATE;
                        UPDATE GEC_BULK_G1_TRADE SET PREPAY_RATE = V_TEMP_BULK_TRADE.PREPAY_RATE WHERE BULK_G1_TRADE_ID = V_TEMP_BULK_TRADE.BULK_G1_TRADE_ID;
                      END IF;

                      V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0364' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0364' END);
                  END IF;
              EXCEPTION WHEN OTHERS THEN
                  V_BULK_G1_TRADE_TEMP.DEFAULT_PREPAY_RATE:=NULL;
              END;
              --gec2.0 misc change--end---

              IF V_TEMP_BULK_TRADE.PREPAY_RATE IS NULL THEN
                IF VAR_TRADE_COUNTRY_CD<>GEC_CONSTANTS_PKG.C_TRADE_CNTRY_US 
                    AND VAR_TRADE_COUNTRY_CD<>GEC_CONSTANTS_PKG.C_TRADE_CNTRY_CA
                    AND V_BULK_G1_TRADE_TEMP.COUNTERPARTY_TYPE = GEC_CONSTANTS_PKG.C_BORROW_REQUEST_NSB THEN
                    V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0367' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0367' END);
                ELSE
                    V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0335' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0335' END);
                    VAR_PASSED := 'N';
                END IF;
              END IF;
            ELSE
              IF V_TEMP_BULK_TRADE.PREPAY_RATE IS NOT NULL AND  V_TEMP_BULK_TRADE.PREPAY_RATE<>0 THEN
                V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0336' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0336' END);
                VAR_PASSED := 'N';
               ELSE
                V_BULK_G1_TRADE_TEMP.PREPAY_RATE :=0;
                IF  p_is_copy = 'Y' THEN
                  V_BULK_G1_TRADE_TEMP.DEFAULT_PREPAY_RATE := V_BULK_G1_TRADE_TEMP.PREPAY_RATE;
                  V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0364' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0364' END);
                  UPDATE GEC_BULK_G1_TRADE SET PREPAY_RATE = V_BULK_G1_TRADE_TEMP.PREPAY_RATE WHERE BULK_G1_TRADE_ID = V_TEMP_BULK_TRADE.BULK_G1_TRADE_ID;
                END IF;
              END IF;
            END IF;
          ELSE
            IF V_TEMP_BULK_TRADE.PREPAY_RATE IS NULL THEN
              V_BULK_G1_TRADE_TEMP.PREPAY_RATE :=0;
              IF  p_is_copy = 'Y' THEN
                V_BULK_G1_TRADE_TEMP.DEFAULT_PREPAY_RATE := V_BULK_G1_TRADE_TEMP.PREPAY_RATE;
                V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0364' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0364' END);
                UPDATE GEC_BULK_G1_TRADE SET PREPAY_RATE = V_BULK_G1_TRADE_TEMP.PREPAY_RATE WHERE BULK_G1_TRADE_ID = V_TEMP_BULK_TRADE.BULK_G1_TRADE_ID;
              END IF;
            ELSIF V_TEMP_BULK_TRADE.PREPAY_RATE <>0 THEN
              V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0336' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0336' END);
              VAR_PASSED := 'N';
            END IF;
          END IF;
        END IF;
        
        -----gec2.1 change CQ-PRTLB01269491---START-
        IF VAR_IS_CPTY_VALID = 'Y' AND VAR_IS_PT_VALID = 'Y' THEN
          BEGIN
          	SELECT  BORROW_REQUEST_TYPE INTO VAR_BORROW_REQUEST_TYPE FROM GEC_BROKER GB WHERE GB.BROKER_CD = V_TEMP_BULK_TRADE.COUNTERPARTY_CD;
            IF V_TEMP_BULK_TRADE.TRANSACTION_TYPE = 'B' AND VAR_BORROW_REQUEST_TYPE='Intercompany Counterparty' AND V_TEMP_BULK_TRADE.INTER_COMPANY_FLAG='Y' THEN
                V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0370' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0370' END);
                VAR_PASSED := 'N';
            END IF;
          EXCEPTION WHEN NO_DATA_FOUND THEN
            NULL;
          END;
          IF V_TEMP_BULK_TRADE.TRANSACTION_TYPE='L' AND  V_TEMP_BULK_TRADE.INTER_COMPANY_FLAG='Y' THEN
            V_BULK_G1_TRADE_TEMP.ERROR_CODE :=  (CASE  WHEN  V_BULK_G1_TRADE_TEMP.ERROR_CODE IS NULL  THEN 'VLD0371' ELSE V_BULK_G1_TRADE_TEMP.ERROR_CODE ||','||'VLD0371' END);
            VAR_PASSED := 'N';
           END IF;
        END IF;
        -----gec2.1 change CQ-PRTLB01269491---END-

        IF VAR_PASSED = 'Y' THEN
          V_BULK_G1_TRADE_TEMP.STATUS := GEC_CONSTANTS_PKG.C_BULK_TRADE_PENDING;
          V_BULK_G1_TRADE_TEMP.STATUS_MSG := GEC_CONSTANTS_PKG.C_BULK_TRADE_PENDING_MSG;
        ELSE 
          V_BULK_G1_TRADE_TEMP.STATUS := GEC_CONSTANTS_PKG.C_BULK_TRADE_ERROR;
          V_BULK_G1_TRADE_TEMP.STATUS_MSG := GEC_CONSTANTS_PKG.C_BULK_TRADE_ERROR_MSG;   
        END IF;
          
        IF V_TEMP_BULK_TRADE.STATUS <> V_BULK_G1_TRADE_TEMP.STATUS THEN
          UPDATE GEC_BULK_G1_TRADE SET STATUS = V_BULK_G1_TRADE_TEMP.STATUS,STATUS_MSG=V_BULK_G1_TRADE_TEMP.STATUS_MSG WHERE BULK_G1_TRADE_ID = V_TEMP_BULK_TRADE.BULK_G1_TRADE_ID;
        END IF;
        
        UPDATE GEC_BULK_G1_TRADE_TEMP GBT
        SET GBT.ASSET_ID = V_BULK_G1_TRADE_TEMP.ASSET_ID, GBT.ERROR_CODE = V_BULK_G1_TRADE_TEMP.ERROR_CODE ,GBT.COLLATERAL_PERCENTAGE = V_BULK_G1_TRADE_TEMP.COLLATERAL_PERCENTAGE,
              --GBT.PRICE = V_BULK_G1_TRADE_TEMP.PRICE,
              GBT.PRICE_ROUND_FACTOR = V_BULK_G1_TRADE_TEMP.PRICE_ROUND_FACTOR,GBT.DEFAULT_PRICE = V_BULK_G1_TRADE_TEMP.DEFAULT_PRICE, 
              GBT.IS_STALE_PRICE = V_BULK_G1_TRADE_TEMP.IS_STALE_PRICE, GBT.IS_STALE_EXCHANGE_PRICE = V_BULK_G1_TRADE_TEMP.IS_STALE_EXCHANGE_PRICE,
              GBT.EXCHANGE_RATE = V_BULK_G1_TRADE_TEMP.EXCHANGE_RATE, GBT.SECURITY_EXCHANGE_RATE = V_BULK_G1_TRADE_TEMP.SECURITY_EXCHANGE_RATE,
               --gec2.0 misc change--start---
              --GBT.COLLATERAL_TYPE = V_TEMP_BULK_TRADE.COLLATERAL_TYPE,GBT.COLLATERAL_CURRENCY_CD = V_TEMP_BULK_TRADE.COLLATERAL_CURRENCY_CD,
              --GBT.PREPAY_DATE = V_TEMP_BULK_TRADE.PREPAY_DATE,GBT.MINIMUM_FEE_CD = V_TEMP_BULK_TRADE.MINIMUM_FEE_CD,
              GBT.DEFAULT_PREPAY_DATE = V_BULK_G1_TRADE_TEMP.DEFAULT_PREPAY_DATE,
              GBT.DEFAULT_PREPAY_RATE = V_BULK_G1_TRADE_TEMP.DEFAULT_PREPAY_RATE,GBT.DEFAULT_COLLATERAL_CURRENCY_CD = V_BULK_G1_TRADE_TEMP.DEFAULT_COLLATERAL_CURRENCY_CD,
              GBT.DEFAULT_COLLATERAL_TYPE = V_BULK_G1_TRADE_TEMP.DEFAULT_COLLATERAL_TYPE,GBT.DEFAULT_MINIMUM_FEE_CD = V_BULK_G1_TRADE_TEMP.DEFAULT_MINIMUM_FEE_CD,
              --GBT.PREPAY_RATE = V_BULK_G1_TRADE_TEMP.PREPAY_RATE,
			  GBT.BROKER_CD = V_BULK_G1_TRADE_TEMP.BROKER_CD,
			  GBT.COUNTERPARTY_TYPE = V_BULK_G1_TRADE_TEMP.COUNTERPARTY_TYPE,
              --gec2.0 misc change--end---
              GBT.STATUS =V_BULK_G1_TRADE_TEMP.STATUS,GBT.STATUS_MSG = V_BULK_G1_TRADE_TEMP.STATUS_MSG
        WHERE GBT.BULK_G1_TRADE_ID = V_TEMP_BULK_TRADE.BULK_G1_TRADE_ID;

           --gec2.0 misc change--start---
		  VAR_DML_BROKER_CODE:=NULL;
		  VAR_AGENCY_FLAG :=NULL;
          V_TEMP_BULK_TRADE.COLLATERAL_TYPE :=NULL;
          V_TEMP_BULK_TRADE.COLLATERAL_CURRENCY_CD :=NULL;
          VAR_PREPAYDAY :=NULL;
          V_BULK_G1_TRADE_TEMP.DEFAULT_PREPAY_DATE :=NULL;
          V_BULK_G1_TRADE_TEMP.DEFAULT_PREPAY_RATE :=NULL;
          V_BULK_G1_TRADE_TEMP.DEFAULT_COLLATERAL_CURRENCY_CD :=NULL;
          V_BULK_G1_TRADE_TEMP.DEFAULT_COLLATERAL_TYPE :=NULL;
          V_BULK_G1_TRADE_TEMP.DEFAULT_MINIMUM_FEE_CD :=NULL;
          --gec2.0 misc change--end---
          V_BULK_G1_TRADE_TEMP.ERROR_CODE := NULL;
          V_BULK_G1_TRADE_TEMP.ASSET_ID := NULL;
          V_BULK_G1_TRADE_TEMP.ASSET_CODE := NULL;
          VAR_ASSET_CODE_TYPE := NULL;
          V_BULK_G1_TRADE_TEMP.COLLATERAL_TYPE :=NULL;
          V_BULK_G1_TRADE_TEMP.COLLATERAL_CURRENCY_CD :=NULL;
          VAR_STATUS :=NULL;
          V_BULK_G1_TRADE_TEMP.PRICE := NULL;
          V_BULK_G1_TRADE_TEMP.BROKER_CD := NULL;
          VAR_ASSET_TYPE_ID := NULL;
          VAR_ASSET_RS := NULL;
          VAR_BROKER_COUNT := NULL;
          V_BULK_G1_TRADE_TEMP.COLLATERAL_PERCENTAGE := NULL;
          VAR_TRADE_COUNTRY_CD:= NULL;
          VAR_CLEAN_PRICE := NULL;
          VAR_DIRTY_PRICE := NULL;
          VAR_TO_TIMEZONE := NULL;
          VAR_FOUND_FLAG := NULL;
          VAR_BUSINESS_DAY := NULL;
          VAR_CUTOFF_TIME := NULL; 
          VAR_PRICE_DATE := NULL;
          VAR_PRICE_CURRENCY := NULL;
          V_BULK_G1_TRADE_TEMP.PRICE_ROUND_FACTOR := NULL;
          VAR_DPS := NULL;  
          V_BULK_G1_TRADE_TEMP.EXCHANGE_RATE := NULL;
          VAR_EXCHANGE_DATE := NULL; 
          V_BULK_G1_TRADE_TEMP.SECURITY_EXCHANGE_RATE := NULL;
          VAR_SECURITY_EXCHANGE_DATE := NULL;              
          V_BULK_G1_TRADE_TEMP.DEFAULT_PRICE := NULL;
          VAR_VALIDATE_DATE_RESULT := NULL;
          V_BULK_G1_TRADE_TEMP.IS_STALE_PRICE := NULL;
          VAR_STALE_EXCHANGE_PRICE := NULL;
          VAR_STALE_SECURITY_CUR := NULL;
          V_BULK_G1_TRADE_TEMP.IS_STALE_EXCHANGE_PRICE := NULL;        
          V_BULK_G1_TRADE_TEMP.PREPAY_RATE := NULL;
          VAR_TRD_CNTY_COUNT :=NULL;
          VAR_IS_CPTY_VALID :=NULL;
          VAR_IS_PT_VALID :=NULL;
          VAR_TRD_CPTY_COUNT :=NULL;
          VAR_COLL_CODE_COUNT :=NULL;
          VAR_COLL_TYPE_COUNT :=NULL;
         END IF;
      END LOOP;
      OPEN p_btList_cursor FOR
      SELECT GBT.BULK_G1_TRADE_ID,GBT.ASSET_ID,GA.CUSIP,GA.ISIN,GA.SEDOL,GA.QUIK,GA.TICKER,GBT.UPDATED_AT,GBT.UPDATED_BY,
             GA.DESCRIPTION,GBT.ASSET_CODE,GBT.COUNTERPARTY_CD,GBT.BROKER_CD, GBT.TRADE_DATE, GBT.SETTLE_DATE,GBT.TRANSACTION_TYPE,
             GBT.SHARE_QTY,GBT.PRICE, GBT.RATE, GBT.COLLATERAL_CURRENCY_CD, GBT.COLLATERAL_PERCENTAGE,
	           GBT.COLLATERAL_TYPE, GBT.COMMENT_TXT, GBT.ERROR_CODE, GBT.PRICE_ROUND_FACTOR,GBT.STATUS,GBT.STATUS_MSG,GBT.MINIMUM_FEE_CD,
	           GBT.DEFAULT_PRICE, GA.TRADE_COUNTRY_CD, GA.ASSET_TYPE_ID, GA.PRICE_DATE, GA.CLEAN_PRICE, GA.DIRTY_PRICE,
             GBT.IS_STALE_PRICE, GBT.IS_STALE_EXCHANGE_PRICE, GBT.PREPAY_DATE, GBT.PREPAY_RATE, 
             tc.PREPAY_DATE_VALUE,
             GA.PRICE_CURRENCY_CD,
             --gec2.0 change-start----
             GBT.DEFAULT_TRADE_DATE,GBT.DEFAULT_PREPAY_DATE,GBT.DEFAULT_PREPAY_RATE,GBT.DEFAULT_COLLATERAL_CURRENCY_CD,
             GBT.DEFAULT_COLLATERAL_TYPE,
             GBT.DEFAULT_MINIMUM_FEE_CD,
             GBT.COUNTERPARTY_TYPE,
             GB.US_COLLATERAL_PERCENTAGE,
             GB.NONUS_COLLATERAL_PERCENTAGE,
             GB.US_PRICE_ROUND_FACTOR,
             GB.NON_US_PRICE_ROUND_FACTOR,
             GB.CA_PRICE_ROUND_FACTOR,
             GB.NOU_US_DPS,
             GB.CA_DPS,
             GB.BOOK_G1_BORROW_FLAG,
             GB.AGENCY_FLAG,
             --gec2.0 change-end-----
             GBT.RECLAIM_RATE*100 AS RECLAIM_RATE, GBT.OVERSEAS_TAX_PERCENTAGE*100 AS OVERSEAS_TAX_PERCENTAGE, GBT.DOMESTIC_TAX_PERCENTAGE*100 AS DOMESTIC_TAX_PERCENTAGE,
             GBT.MINIMUM_FEE, GBT.EXCHANGE_RATE, GBT.SECURITY_EXCHANGE_RATE,GBT.EXPECTED_RETURN_DATE,GBT.TERM_DATE,GBT.STATUS,GBT.STATUS_MSG,GBT.G1_STATUS,GBT.G1_STATUS_MSG,
             --gec2.1 change--
			 GBT.CROSS_TRADE_FLAG,GBT.INTER_COMPANY_FLAG,GB.BORROW_REQUEST_TYPE,GBT.BULK_G1_TRADE_UI_ID
      FROM GEC_BULK_G1_TRADE_TEMP GBT
      LEFT JOIN GEC_BROKER GB ON GBT.BROKER_CD = GB.BROKER_CD
      LEFT JOIN GEC_ASSET GA ON GBT.ASSET_ID = GA.ASSET_ID
      LEFT JOIN GEC_TRADE_COUNTRY TC ON GA.TRADE_COUNTRY_CD = TC.TRADE_COUNTRY_CD
      ORDER BY
			GBT.ASSET_CODE,
			GBT.TRANSACTION_TYPE DESC,
			GBT.SHARE_QTY,
			GBT.SETTLE_DATE;
	GEC_LOG_PKG.LOG_PERFORMANCE_END(V_PROCEDURE_NAME);
  END VALIDATE_BULK_TRADE;
  
  PROCEDURE VLD_BULK_TRADE_PREPAY_DATE(
      var_prepay_date NUMBER,
      var_coll_code IN VARCHAR2,
      var_error_code IN OUT VARCHAR2)
  IS
      VAR_TRADE_COUNTRY_CD GEC_TRADE_COUNTRY.TRADE_COUNTRY_CD% TYPE;
      VAR_FROM_TIMEZONE GEC_TRADE_COUNTRY.LOCALE%TYPE;
      VAR_TO_TIMEZONE GEC_TRADE_COUNTRY.LOCALE%TYPE;
  BEGIN
     VAR_FROM_TIMEZONE := 'AMERICA/NEW_YORK';
     BEGIN
        SELECT TRADE_COUNTRY_CD,LOCALE INTO VAR_TRADE_COUNTRY_CD,VAR_TO_TIMEZONE
        FROM GEC_TRADE_COUNTRY
        WHERE CURRENCY_CD=var_coll_code;
     EXCEPTION WHEN NO_DATA_FOUND THEN
        VAR_TRADE_COUNTRY_CD:=NULL;
        VAR_TO_TIMEZONE:=NULL;
     END;
     BEGIN
        IF VAR_TRADE_COUNTRY_CD IS NOT NULL AND GEC_UTILS_PKG.IS_WORKDAY(TO_DATE(var_prepay_date,'YYYY-MM-DD'),VAR_TRADE_COUNTRY_CD,'S') ='N' THEN
            var_error_code :=  (CASE  WHEN  var_error_code IS NULL  THEN 'VLD0333' ELSE var_error_code ||','||'VLD0333' END);
        ELSIF VAR_TRADE_COUNTRY_CD IS NOT NULL AND TO_NUMBER(TO_CHAR(GEC_UTILS_PKG.TO_TIMEZONE( SYSDATE ,VAR_FROM_TIMEZONE , VAR_TO_TIMEZONE),'YYYYMMDD')) > var_prepay_date THEN 
            var_error_code :=  (CASE  WHEN  var_error_code IS NULL  THEN 'VLD0332' ELSE var_error_code ||','||'VLD0332' END);
        END IF;
     EXCEPTION WHEN OTHERS THEN
        var_error_code :=  (CASE  WHEN  var_error_code IS NULL  THEN 'VLD0320' ELSE var_error_code ||','||'VLD0320' END);
     END;
  END VLD_BULK_TRADE_PREPAY_DATE;
  
  PROCEDURE VALIDATE_CPTY_AND_POSTING_TYPE(p_cpty IN VARCHAR2,
                                        p_posting_type IN OUT VARCHAR2,
                                        p_trade_cnty IN VARCHAR2,
                                        var_dml_broker_cd OUT VARCHAR2,
                                        var_broker_cd OUT VARCHAR2,
                                        var_trans_type OUT VARCHAR2,
                                        var_coll_code OUT VARCHAR2,
                                        var_coll_type OUT VARCHAR2,
                                        var_found_flag OUT NUMBER)
  IS
      VAR_TRANSACTION_TYPE GEC_BULK_G1_TRADE.TRANSACTION_TYPE%TYPE;
  BEGIN
    BEGIN
      SELECT 
          COUNT(TRANSACTION_TYPE)
      INTO var_found_flag
      FROM(
            SELECT 
               'B' AS TRANSACTION_TYPE,
                BROKER_CD, 
               'NSB' AS POS_TYPE,
                COLLATERAL_CURRENCY_CD,
                DECODE(COLLATERAL_TYPE,'CASH','C','POOL','P','N') COLL_TYPE 
            FROM GEC_BROKER
            WHERE BORROW_REQUEST_TYPE !='SB' 
            AND BROKER_CD=p_cpty
      UNION
      SELECT
            decode(GGB.TRANSACTION_CD,'G1B','B','L') AS TRANSACTION_TYPE,
            decode(GGB.POS_TYPE,'SB',GF.DML_SB_BROKER,GF.DML_NSB_BROKER) AS BROKER_CD,
            GGB.POS_TYPE,
            NVL(GGC.COLLATERAL_CURRENCY_CD, 
            GGB.COLLATERAL_CURRENCY_CD) COLLATERAL_CURRENCY_CD,
            NVL(GGC.COLL_TYPE, GGB.COLL_TYPE) COLL_TYPE
      FROM GEC_G1_BOOKING GGB
      LEFT JOIN GEC_FUND GF ON GGB.FUND_CD = GF.FUND_CD
      LEFT JOIN GEC_G1_COLLATERAL GGC
      ON (GGB.G1_BOOKING_ID = GGC.G1_BOOKING_ID AND GGC.TRADE_COUNTRY_CD = p_trade_cnty)
      WHERE GGB.COUNTERPARTY_CD=p_cpty
      AND ((GGB.TRANSACTION_CD='G1B' AND GGB.POS_TYPE='SB') OR GGB.TRANSACTION_CD='G1L'))
      WHERE TRANSACTION_TYPE = p_posting_type;
      
      IF var_found_flag > 1 THEN
        SELECT 
          DML_BROKER_CD,
          BROKER_CD,
          POS_TYPE,
      	  COLLATERAL_CURRENCY_CD,
      	  COLL_TYPE
        INTO
          var_dml_broker_cd,
          var_broker_cd,
          var_trans_type,
          var_coll_code,
          var_coll_type
        FROM(
            SELECT 
                'B' AS TRANSACTION_TYPE,
                BROKER_CD AS DML_BROKER_CD,
                BROKER_CD, 
               'NSB' AS POS_TYPE,
                COLLATERAL_CURRENCY_CD,
                DECODE(COLLATERAL_TYPE,'CASH','C','POOL','P','N') COLL_TYPE
            FROM GEC_BROKER
            WHERE BORROW_REQUEST_TYPE !='SB' 
            AND BROKER_CD=p_cpty
        UNION
        SELECT
            DECODE(GGB.TRANSACTION_CD,'G1B','B','L') AS TRANSACTION_TYPE,
            DECODE(GGB.POS_TYPE,'SB',GF.DML_SB_BROKER,GF.DML_NSB_BROKER) AS DML_BROKER_CD,
            DECODE(GGB.POS_TYPE,'SB',DSB.BROKER_CD,DNSB.BROKER_CD) AS BROKER_CD,
            GGB.POS_TYPE,
            NVL(GGC.COLLATERAL_CURRENCY_CD, 
            GGB.COLLATERAL_CURRENCY_CD) COLLATERAL_CURRENCY_CD,
            NVL(GGC.COLL_TYPE, GGB.COLL_TYPE) COLL_TYPE
        FROM GEC_G1_BOOKING GGB
        LEFT JOIN GEC_FUND GF ON GGB.FUND_CD = GF.FUND_CD
        LEFT JOIN GEC_BROKER_VW DSB ON (GF.DML_SB_BROKER = DSB.DML_BROKER_CD AND ROWNUM=1 )
        LEFT JOIN GEC_BROKER_VW DNSB ON (GF.DML_NSB_BROKER = DNSB.DML_BROKER_CD AND DNSB.NON_CASH_AGENCY_FLAG = 'N' AND ROWNUM=1 )
        LEFT JOIN GEC_G1_COLLATERAL GGC
        ON (GGB.G1_BOOKING_ID = GGC.G1_BOOKING_ID AND GGC.TRADE_COUNTRY_CD = p_trade_cnty)
        WHERE GGB.COUNTERPARTY_CD=p_cpty
        AND ((GGB.TRANSACTION_CD='G1B' AND GGB.POS_TYPE='SB') OR GGB.TRANSACTION_CD='G1L'))
        WHERE TRANSACTION_TYPE = p_posting_type AND ROWNUM = 1;
      ELSIF var_found_flag =1 THEN
        SELECT 
          DML_BROKER_CD,
          BROKER_CD,
          POS_TYPE,
      	  COLLATERAL_CURRENCY_CD,
      	  COLL_TYPE
        INTO 
          var_dml_broker_cd,
          var_broker_cd,
          var_trans_type,
          var_coll_code,
          var_coll_type
        FROM(
            SELECT 
               'B' AS TRANSACTION_TYPE,
                BROKER_CD AS DML_BROKER_CD,
                BROKER_CD, 
               'NSB' AS POS_TYPE,
                COLLATERAL_CURRENCY_CD,
                DECODE(COLLATERAL_TYPE,'CASH','C','POOL','P','N') COLL_TYPE
            FROM GEC_BROKER
            WHERE BORROW_REQUEST_TYPE !='SB' 
            AND BROKER_CD=p_cpty
        UNION
        SELECT
            DECODE(GGB.TRANSACTION_CD,'G1B','B','L') AS TRANSACTION_TYPE,
            DECODE(GGB.POS_TYPE,'SB',GF.DML_SB_BROKER,GF.DML_NSB_BROKER) AS DML_BROKER_CD,
            DECODE(GGB.POS_TYPE,'SB',DSB.BROKER_CD,DNSB.BROKER_CD) AS BROKER_CD,
            GGB.POS_TYPE,
            NVL(GGC.COLLATERAL_CURRENCY_CD, 
            GGB.COLLATERAL_CURRENCY_CD) COLLATERAL_CURRENCY_CD,
            NVL(GGC.COLL_TYPE, GGB.COLL_TYPE) COLL_TYPE
        FROM GEC_G1_BOOKING GGB
        LEFT JOIN GEC_FUND GF ON GGB.FUND_CD = GF.FUND_CD
        LEFT JOIN GEC_BROKER_VW DSB ON (GF.DML_SB_BROKER = DSB.DML_BROKER_CD AND ROWNUM=1 )
        LEFT JOIN GEC_BROKER_VW DNSB ON (GF.DML_NSB_BROKER = DNSB.DML_BROKER_CD AND DNSB.NON_CASH_AGENCY_FLAG = 'N' AND ROWNUM=1 )
        LEFT JOIN GEC_G1_COLLATERAL GGC
        ON (GGB.G1_BOOKING_ID = GGC.G1_BOOKING_ID AND GGC.TRADE_COUNTRY_CD = p_trade_cnty)
        WHERE GGB.COUNTERPARTY_CD=p_cpty
        AND ((GGB.TRANSACTION_CD='G1B' AND GGB.POS_TYPE='SB') OR GGB.TRANSACTION_CD='G1L'))
        WHERE TRANSACTION_TYPE = p_posting_type;
      ELSE
        SELECT
			TRANSACTION_TYPE, 
        	DML_BROKER_CD,
            BROKER_CD,
            POS_TYPE,
      		COLLATERAL_CURRENCY_CD,
      		COLL_TYPE
        INTO 
		  p_posting_type,
          var_dml_broker_cd,
          var_broker_cd,
          var_trans_type,
          var_coll_code,
          var_coll_type
        FROM(
            SELECT 
                'B' AS TRANSACTION_TYPE,
                BROKER_CD AS DML_BROKER_CD,
                BROKER_CD, 
               'NSB' AS POS_TYPE,
                COLLATERAL_CURRENCY_CD,
                DECODE(COLLATERAL_TYPE,'CASH','C','POOL','P','N') COLL_TYPE
            FROM GEC_BROKER
            WHERE BORROW_REQUEST_TYPE !='SB' 
            AND BROKER_CD=p_cpty
          UNION
          SELECT
            DECODE(GGB.TRANSACTION_CD,'G1B','B','L') AS TRANSACTION_TYPE,
            DECODE(GGB.POS_TYPE,'SB',GF.DML_SB_BROKER,GF.DML_NSB_BROKER) AS DML_BROKER_CD,
            DECODE(GGB.POS_TYPE,'SB',DSB.BROKER_CD,DNSB.BROKER_CD) AS BROKER_CD,
            GGB.POS_TYPE,
            NVL(GGC.COLLATERAL_CURRENCY_CD, 
            GGB.COLLATERAL_CURRENCY_CD) COLLATERAL_CURRENCY_CD,
            NVL(GGC.COLL_TYPE, GGB.COLL_TYPE) COLL_TYPE
          FROM GEC_G1_BOOKING GGB
          LEFT JOIN GEC_FUND GF ON GGB.FUND_CD = GF.FUND_CD
          LEFT JOIN GEC_BROKER_VW DSB ON (GF.DML_SB_BROKER = DSB.DML_BROKER_CD AND ROWNUM=1 )
          LEFT JOIN GEC_BROKER_VW DNSB ON (GF.DML_NSB_BROKER = DNSB.DML_BROKER_CD AND DNSB.NON_CASH_AGENCY_FLAG = 'N' AND ROWNUM=1 )
          LEFT JOIN GEC_G1_COLLATERAL GGC
          ON (GGB.G1_BOOKING_ID = GGC.G1_BOOKING_ID AND GGC.TRADE_COUNTRY_CD = p_trade_cnty)
          WHERE GGB.COUNTERPARTY_CD=p_cpty
          AND ((GGB.TRANSACTION_CD='G1B' AND GGB.POS_TYPE='SB') OR GGB.TRANSACTION_CD='G1L'))
          WHERE ROWNUM = 1;
      END IF;
    EXCEPTION
      WHEN OTHERS THEN
        var_found_flag :=0;
    END;
  END VALIDATE_CPTY_AND_POSTING_TYPE;
  
  PROCEDURE BULK_RT_VALID_ASSET_CODE(p_assetCode IN VARCHAR2,
												p_valid OUT VARCHAR2,
												p_error_msg OUT VARCHAR2,
												p_bulk_return_cursor OUT SYS_REFCURSOR)
	IS 
		var_asset_rs GEC_ASSET_TP_ARRAY;
		var_asset GEC_ASSET_TP;
		var_found_flag NUMBER;
		var_asset_code_type varchar2(3);
		var_status VARCHAR2(50);
	BEGIN
		OPEN p_bulk_return_cursor FOR
				SELECT NULL ASSET_CODE, NULL ASSET_ID, 
					  NULL CUSIP,  NULL ISIN,  NULL SEDOL,  NULL QUIK,  NULL TICKER,
					  NULL DESCRIPTION, NULL TRADE_COUNTRY_CD FROM DUAL WHERE 1=0;
		GEC_VALIDATION_PKG.VALIDATE_ASSET_ID(NULL, NULL,NULL,NULL,NULL,NULL,NULL,p_assetCode,
                              NULL,var_found_flag,var_asset_code_type,var_status ,var_asset_rs);
                              
        IF var_found_flag = 0 THEN
            p_valid := 'N';
            p_error_msg := 'Security is not found.';
        ELSIF var_found_flag > 1 THEN 
           	p_valid := 'N';
            p_error_msg := 'Multipl securities are found.';
        ELSE 
            p_valid := 'Y';   
            p_error_msg := NULL;         
            var_asset := var_asset_rs(1);
          	OPEN p_bulk_return_cursor FOR
            SELECT p_assetCode ASSET_CODE, var_asset.ASSET_ID ASSET_ID, 
					  var_asset.CUSIP CUSIP,  var_asset.ISIN ISIN,  var_asset.SEDOL SEDOL,  var_asset.QUIK QUIK,  var_asset.TICKER TICKER,
					  var_asset.DESCRIPTION DESCRIPTION, var_asset.TRADE_COUNTRY_CD TRADE_COUNTRY_CD FROM DUAL;
		END IF;
	END BULK_RT_VALID_ASSET_CODE;
	
  
  PROCEDURE SAVE_PASTED_BULK_RETURN(p_bulkReturn OUT SYS_REFCURSOR,
										p_retMsgContents OUT SYS_REFCURSOR,
										p_errorCode	OUT VARCHAR2)
	IS
		var_asset_rs GEC_ASSET_TP_ARRAY;
		var_asset GEC_ASSET_TP;
		var_found_flag NUMBER;
		var_asset_code_type varchar2(3);
		var_status VARCHAR2(50);
		var_valid VARCHAR2(1); --for status
		var_cntpty_broker_type GEC_BROKER.BORROW_REQUEST_TYPE%type; -- 'SB' OR 'NSB'
		var_cntpty_post_type varchar2(1); --'B' 'L' 'D' VALUE OF TRANSACTION_TYPE
		var_cntpty_is_broker varchar2(1);
		var_cntpty_is_cntpty varchar2(1);
		var_traderCountry GEC_ASSET.TRADE_COUNTRY_CD%type;
		CURSOR v_tempBulkReturn IS
			SELECT BULK_G1_RETURN_ID,ASSET_CODE, TRADE_DATE,
					SETTLE_DATE,QTY,BARGAIN_REF,COUNTERPARTY_CD, TRANSACTION_TYPE,BRANCH_CD,G1_INSTANCE_CD,DIVIDEND_TRADE_FLAG
			FROM GEC_BULK_G1_RETURN_TEMP;
		
		var_valid_ctpy varchar2(1):='Y';
	BEGIN
		OPEN p_bulkReturn FOR
			SELECT NULL BULK_G1_RETURN_ID,NULL ASSET_ID,NULL CUSIP,NULL ISIN,NULL QUIK,NULL SEDOL,NULL ticker,
			NULL DESCRIPTION,NULL ASSET_CODE,NULL TRADE_COUNTRY_CD,NULL COUNTERPARTY_CD,NULL TRANSACTION_TYPE,NULL TRANSACTION_CD,
			NULL TRADE_DATE,NULL SETTLE_DATE,NULL QTY,NULL BARGAIN_REF,NULL BRANCH_CD,NULL G1_INSTANCE_CD,NULL DIVIDEND_TRADE_FLAG,NULL STATUS,	NULL updated_At ,NULL updated_By,
			NULL ASSETCODE_ERROR_MSG,NULL tradedate_error_msg,NULL settledate_error_msg,NULL shareqty_error_msg,NULL bargainref_error_msg,NULL CREATED_AT ,NULL CREATED_BY,
			NULL cptyname_error_msg,NULL postype_error_msg, NULL G1_INSTANCE_CD_ERROR_MSG,NULL DIVIDEND_TRADE_FLAG_ERROR_MSG 
			FROM DUAL where 1=0;
		
		OPEN p_retMsgContents FOR
				SELECT NULL MSG_CONTENT FROM DUAL where 1=0;
		--1. VALIDATE FIELDS LENGTH
		BEGIN
			select 'N' into var_valid_ctpy FROM gec_bulk_g1_return_temp
			WHERE LENGTH(COUNTERPARTY_CD)>6 AND ROWNUM=1;
		EXCEPTION WHEN NO_DATA_FOUND THEN
			var_valid_ctpy:='Y';
		END;
		
		IF var_valid_ctpy = 'N' THEN
			p_errorCode := GEC_ERROR_CODE_PKG.C_VLD_CPATY_LENGTH_INVALID;
			OPEN p_retMsgContents FOR
				SELECT distinct COUNTERPARTY_CD MSG_CONTENT FROM gec_bulk_g1_return_temp
				WHERE LENGTH(COUNTERPARTY_CD)>6;
			return;
		END IF;	
		
		--2. VALIDATE IF EXIST DATA WHICH RETURN CPTY IS BLANK AND POSTING TYPE IS NOT 'B'
		--BEGIN
		--	select 'N' into var_valid_ctpy FROM gec_bulk_g1_return_temp
		--	WHERE COUNTERPARTY_CD is null 
		--		AND TRANSACTION_TYPE<>GEC_CONSTANTS_PKG.BULK_RETURN_POSTYPE_BORROW
		--		AND BARGAIN_REF is null
		--		AND ROWNUM=1;
		--EXCEPTION WHEN NO_DATA_FOUND THEN
			var_valid_ctpy:='Y';
		--END;
		
		--IF var_valid_ctpy = 'N' THEN
		--	p_errorCode := GEC_ERROR_CODE_PKG.C_VLD_CPATY_BLANK_INVALID;
		--	OPEN p_retMsgContents FOR
		--		SELECT NULL MSG_CONTENT FROM DUAL where 1=0;
		--	return;
		--END IF;	
		--3. VALIDATE IF EXISTS DATA WHICH BARGAIN REF IS NOT NULL AND TRANSACTION TYPE IS NOT IN ('BOTH','B','L')
		BEGIN
			SELECT 'N' into var_valid_ctpy FROM gec_bulk_g1_return_temp
			WHERE TRANSACTION_TYPE NOT IN ('BOTH','B','L')
				AND ROWNUM=1;
		EXCEPTION WHEN NO_DATA_FOUND THEN
			var_valid_ctpy:='Y';
		END;
		IF var_valid_ctpy = 'N' THEN
			p_errorCode := GEC_ERROR_CODE_PKG.C_VLD_POSTING_TYPE_INVALID;
			OPEN p_retMsgContents FOR
				SELECT distinct TRANSACTION_TYPE MSG_CONTENT FROM gec_bulk_g1_return_temp
				where TRANSACTION_TYPE NOT IN ('BOTH','B','L');
			return;
		END IF;
		--change posting type 'BOTH' TO 'D'
		UPDATE gec_bulk_g1_return_temp SET TRANSACTION_TYPE='D' WHERE TRANSACTION_TYPE='BOTH';
		
		FOR v_bulkReturn IN v_tempBulkReturn
		LOOP
			--init temp variable
			var_valid :='P';
			--var_cntpty_post_type:='B';
			var_cntpty_is_broker:='Y';
			var_cntpty_is_cntpty:='Y';
			var_traderCountry:='';
			GEC_VALIDATION_PKG.VALIDATE_ASSET_ID(NULL, NULL,NULL,NULL,NULL,NULL,NULL,v_bulkReturn.ASSET_CODE,
                              NULL,var_found_flag,var_asset_code_type,var_status ,var_asset_rs);
            IF var_found_flag <> 1 THEN
            	var_valid :='X';
	        ELSE 
	            var_asset := var_asset_rs(1);
	            UPDATE GEC_BULK_G1_RETURN_TEMP SET ASSET_ID=var_asset.ASSET_ID,ASSET_CODE_TYPE=var_asset_code_type WHERE BULK_G1_RETURN_ID=v_bulkReturn.BULK_G1_RETURN_ID;
	        END IF;
	        
	        IF var_valid<>'X' AND (v_bulkReturn.TRADE_DATE IS NULL OR v_bulkReturn.TRADE_DATE=0) THEN
				var_valid :='X';
			END IF;
	        IF var_valid<>'X' AND (v_bulkReturn.SETTLE_DATE IS NULL OR v_bulkReturn.SETTLE_DATE=0) THEN
				var_valid :='X';
			END IF;
			IF var_valid<>'X' AND v_bulkReturn.TRADE_DATE>0 AND v_bulkReturn.SETTLE_DATE>0 AND v_bulkReturn.SETTLE_DATE < v_bulkReturn.TRADE_DATE THEN
				var_valid :='X';
			END IF;
			IF var_valid<>'X' AND (v_bulkReturn.QTY IS NULL OR v_bulkReturn.QTY <=0) THEN
				var_valid :='X';
			END IF;
			STATUS_VALIDATE_BAR_CPTY_PTYPE(var_valid,v_bulkReturn.BARGAIN_REF,v_bulkReturn.COUNTERPARTY_CD,v_bulkReturn.TRANSACTION_TYPE);
			--4.update status
			UPDATE GEC_BULK_G1_RETURN_TEMP 
				 SET TRANSACTION_CD='BR',
				 		STATUS=var_valid
				  WHERE BULK_G1_RETURN_ID=v_bulkReturn.BULK_G1_RETURN_ID;
		END LOOP;
		
		VALIDATE_BULK_RETURN(p_bulkReturn);
		
		-- INSERT ALL TEMP DATA
		INSERT INTO GEC_BULK_G1_RETURN(BULK_G1_RETURN_ID,
									ASSET_ID,
									ASSET_CODE,
									COUNTERPARTY_CD,
									TRANSACTION_TYPE,
									TRANSACTION_CD,
									TRADE_DATE,
									SETTLE_DATE,
									QTY,
									BARGAIN_REF,
									BRANCH_CD,
									G1_INSTANCE_CD,
									DIVIDEND_TRADE_FLAG,
									STATUS,
									updated_At,
									updated_By) 
		SELECT BULK_G1_RETURN_ID,
									ASSET_ID,
									ASSET_CODE,
									COUNTERPARTY_CD,
									TRANSACTION_TYPE,
									TRANSACTION_CD,
									TRADE_DATE,
									SETTLE_DATE,
									QTY,
									BARGAIN_REF,
									BRANCH_CD,
									G1_INSTANCE_CD,
									DIVIDEND_TRADE_FLAG,
									STATUS,
									updated_At,
									updated_By
				FROM GEC_BULK_G1_RETURN_TEMP;
		
	END SAVE_PASTED_BULK_RETURN;
	
	PROCEDURE VALIDATE_BULK_RETURN(r_bulkReturn OUT SYS_REFCURSOR)
	IS
		CURSOR v_tempBulkReturns IS
			SELECT BULK_G1_RETURN_ID,
					ASSET_ID,
					ASSET_CODE,
					ASSET_CODE_TYPE,
					TRADE_DATE,
					SETTLE_DATE,
					COUNTERPARTY_CD,
					QTY,
					STATUS,
					BARGAIN_REF,
					BRANCH_CD,
					G1_INSTANCE_CD,
					DIVIDEND_TRADE_FLAG,
					UPDATED_AT,
					UPDATED_BY,
					TRANSACTION_TYPE,
					TRANSACTION_CD,
					ASSETCODE_ERROR_MSG,
					SHAREQTY_ERROR_MSG,
					TRADEDATE_ERROR_MSG,
					SETTLEDATE_ERROR_MSG,
					BARGAINREF_ERROR_MSG,
					CPTYNAME_ERROR_MSG,
					POSTYPE_ERROR_MSG,
					BRANCH_CD_ERROR_MSG,
					G1_INSTANCE_CD_ERROR_MSG,
					DIVIDEND_TRADE_FLAG_ERROR_MSG
			FROM GEC_BULK_G1_RETURN_TEMP;
		var_assetcode_error_msg GEC_BULK_G1_RETURN_TEMP.ASSETCODE_ERROR_MSG%type;
		var_shareqty_error_msg GEC_BULK_G1_RETURN_TEMP.SHAREQTY_ERROR_MSG%type;
		var_tradedate_error_msg GEC_BULK_G1_RETURN_TEMP.TRADEDATE_ERROR_MSG%type;
		var_settledate_error_msg GEC_BULK_G1_RETURN_TEMP.SETTLEDATE_ERROR_MSG%type;
		var_bargainref_error_msg GEC_BULK_G1_RETURN_TEMP.BARGAINREF_ERROR_MSG%type;
		var_cptyname_error_msg GEC_BULK_G1_RETURN_TEMP.CPTYNAME_ERROR_MSG%type;
		var_postype_error_msg GEC_BULK_G1_RETURN_TEMP.POSTYPE_ERROR_MSG%type;
		--gec2.3 change
		var_branch_error_msg GEC_BULK_G1_RETURN_TEMP.BRANCH_CD_ERROR_MSG%type;
		var_g1_instance_error_msg GEC_BULK_G1_RETURN_TEMP.G1_INSTANCE_CD_ERROR_MSG%type;
		var_div_trade_error_msg GEC_BULK_G1_RETURN_TEMP.DIVIDEND_TRADE_FLAG_ERROR_MSG%type;
		var_asset_rs GEC_ASSET_TP_ARRAY;
		var_found_flag NUMBER;
		var_asset_code_type varchar2(3);
		var_status VARCHAR2(50);
		var_traderCountry GEC_ASSET.TRADE_COUNTRY_CD%type;
		var_cntpty_broker_type GEC_BROKER.BORROW_REQUEST_TYPE%type; -- 'SB' OR 'NSB'
		var_cntpty_is_broker varchar2(1);
		var_cntpty_is_cntpty varchar2(1);
		var_g1_instance_count NUMBER;
	BEGIN
		
		FOR v_tempBulkReturn IN v_tempBulkReturns
		LOOP
			IF v_tempBulkReturn.STATUS NOT IN ('B','E') THEN
				--0.clear all msg content
				var_assetcode_error_msg :='';
				var_shareqty_error_msg :='';
				var_tradedate_error_msg :='';
				var_settledate_error_msg  :='';
				var_bargainref_error_msg :='';
				var_cptyname_error_msg :='';
				var_postype_error_msg :='';
				var_branch_error_msg :='';
				var_g1_instance_error_msg :='';
				var_div_trade_error_msg :='';
				var_traderCountry :='';
				var_cntpty_is_broker:='Y';
				var_cntpty_is_cntpty:='Y';
				--1. VALIDATE ASSET CODE
				
				IF v_tempBulkReturn.ASSET_CODE IS NULL THEN
					var_assetcode_error_msg :=GEC_CONSTANTS_PKG.BULK_RETURN_ASSET_MISSING;
				ELSE
					IF v_tempBulkReturn.ASSET_ID IS NULL THEN
						GEC_VALIDATION_PKG.VALIDATE_ASSET_ID(NULL, NULL,NULL,NULL,NULL,NULL,NULL,v_tempBulkReturn.ASSET_CODE,
	                              NULL,var_found_flag,var_asset_code_type,var_status ,var_asset_rs);
	            		IF var_found_flag < 1 THEN
	            			var_assetcode_error_msg :=GEC_CONSTANTS_PKG.BULK_RETURN_ASSET_NOT_FOUND;
	            		ELSIF var_found_flag > 1 THEN
	            			var_assetcode_error_msg :=GEC_CONSTANTS_PKG.BULK_RETURN_ASSET_MULTI_FOUND;
	            		ELSE
	            			var_assetcode_error_msg :='';
	            		END IF;
	        		END IF;
				END IF;
				
				--2.validate trade date and settle date
				IF v_tempBulkReturn.TRADE_DATE IS NULL OR v_tempBulkReturn.TRADE_DATE=0 THEN
					var_tradedate_error_msg :=GEC_CONSTANTS_PKG.BULK_RETURN_TDATE_MISSING;
				END IF;
				IF v_tempBulkReturn.SETTLE_DATE IS NULL OR v_tempBulkReturn.SETTLE_DATE=0 THEN
					var_settledate_error_msg :=GEC_CONSTANTS_PKG.BULK_RETURN_SDATE_MISSING;
				ELSE
					IF v_tempBulkReturn.SETTLE_DATE <to_number( TO_CHAR(sysdate,'yyyymmdd')) THEN
						var_settledate_error_msg :='Warning:'||GEC_CONSTANTS_PKG.BULK_RETURN_SDATE_PAST;
					END IF;
				END IF;
				IF v_tempBulkReturn.TRADE_DATE>0 AND v_tempBulkReturn.SETTLE_DATE>0 AND v_tempBulkReturn.SETTLE_DATE < v_tempBulkReturn.TRADE_DATE THEN
					var_settledate_error_msg :=GEC_CONSTANTS_PKG.BULK_RETURN_SDATE_LT_TDATE;
				END IF;
				-- CHECK HOLIDAY
				IF v_tempBulkReturn.ASSET_ID IS NOT NULL OR v_tempBulkReturn.ASSET_ID>0 THEN
					BEGIN
		            	SELECT TRADE_COUNTRY_CD INTO var_traderCountry FROM GEC_ASSET WHERE ASSET_ID= v_tempBulkReturn.ASSET_ID;
		            EXCEPTION WHEN NO_DATA_FOUND THEN
		            	var_traderCountry:='';
		            END;
		            
		            IF v_tempBulkReturn.TRADE_DATE>0 AND  var_traderCountry IS NOT NULL AND var_tradedate_error_msg IS NULL THEN
						IF 'N' = GEC_UTILS_PKG.IS_WORKDAY(GEC_UTILS_PKG.NUMBER_TO_DATE(v_tempBulkReturn.TRADE_DATE),var_traderCountry,'T') THEN
							var_tradedate_error_msg :='Warning:'||GEC_CONSTANTS_PKG.BULK_RETURN_TDATE_HOLIDAY;
						END IF;
					END IF;
					
					IF v_tempBulkReturn.SETTLE_DATE>0 AND  var_traderCountry IS NOT NULL AND var_settledate_error_msg IS NULL THEN
						IF 'N' = GEC_UTILS_PKG.IS_WORKDAY(GEC_UTILS_PKG.NUMBER_TO_DATE(v_tempBulkReturn.SETTLE_DATE),var_traderCountry,'S') THEN
							var_settledate_error_msg :='Warning:'||GEC_CONSTANTS_PKG.BULK_RETURN_SDATE_HOLIDAY;
						END IF;
					END IF;	
				END IF;
				
				--3.validate shareQty
				IF v_tempBulkReturn.QTY <=0 OR v_tempBulkReturn.QTY IS NULL THEN
					var_shareqty_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_SHAREQTY_MISSING;
				END IF;
				--4.validate bulk return AND POSTING TYPE
				IF v_tempBulkReturn.COUNTERPARTY_CD IS NOT NULL AND v_tempBulkReturn.BARGAIN_REF IS NULL THEN
					BEGIN
						SELECT borrow_request_type INTO var_cntpty_broker_type 
						FROM gec_broker 
						WHERE  BORROW_REQUEST_TYPE != 'Intercompany Counterparty'
	 					AND LEGAL_ENTITY_CD='SSBT' and BROKER_CD=v_tempBulkReturn.COUNTERPARTY_CD;
					EXCEPTION WHEN NO_DATA_FOUND THEN
						var_cntpty_is_broker := 'N';
					END;
					BEGIN
						SELECT 'Y' INTO var_cntpty_is_cntpty
						FROM gec_G1_booking
						WHERE transaction_cd='G1L' AND pos_type='NSB' AND counterparty_cd=v_tempBulkReturn.COUNTERPARTY_CD;
					EXCEPTION WHEN NO_DATA_FOUND THEN
						var_cntpty_is_cntpty := 'N';
					END;
					
					IF var_cntpty_is_broker='Y' AND var_cntpty_is_cntpty='Y' THEN
						IF  v_tempBulkReturn.TRANSACTION_TYPE=GEC_CONSTANTS_PKG.BULK_RETURN_POSTYPE_BOTH THEN
							var_postype_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_POST_TYPE_WRONG;
						ELSIF v_tempBulkReturn.TRANSACTION_TYPE IS NULL THEN
							var_postype_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_POST_TYPE_MISSING;
						ELSE
							var_postype_error_msg := '';
						END IF;
					ELSIF var_cntpty_is_broker='Y' AND var_cntpty_is_cntpty='N' THEN
						IF var_cntpty_broker_type<>'SB' THEN
							IF v_tempBulkReturn.TRANSACTION_TYPE =GEC_CONSTANTS_PKG.BULK_RETURN_POSTYPE_BOTH THEN
								var_postype_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_POST_TYPE_WRONG;
							ELSIF v_tempBulkReturn.TRANSACTION_TYPE =GEC_CONSTANTS_PKG.BULK_RETURN_POSTYPE_LOAN THEN
								var_postype_error_msg := 'Warning:' || GEC_CONSTANTS_PKG.BULK_RETURN_POST_TYPE_WARNING;
							ELSIF v_tempBulkReturn.TRANSACTION_TYPE IS NULL THEN
								var_postype_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_POST_TYPE_MISSING;
							ELSE
								var_postype_error_msg := '';
							END IF;
						ELSE
							IF  v_tempBulkReturn.TRANSACTION_TYPE IN (GEC_CONSTANTS_PKG.BULK_RETURN_POSTYPE_BORROW,GEC_CONSTANTS_PKG.BULK_RETURN_POSTYPE_LOAN) THEN
								var_postype_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_POST_TYPE_WRONG;
							ELSIF v_tempBulkReturn.TRANSACTION_TYPE IS NULL THEN
								var_postype_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_POST_TYPE_MISSING;
							ELSE
								var_postype_error_msg := '';
							END IF;
						END IF;
					ELSIF var_cntpty_is_broker='N' AND var_cntpty_is_cntpty='Y' THEN
						IF  v_tempBulkReturn.TRANSACTION_TYPE =GEC_CONSTANTS_PKG.BULK_RETURN_POSTYPE_BOTH THEN 
							var_postype_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_POST_TYPE_WRONG;
						ELSIF  v_tempBulkReturn.TRANSACTION_TYPE =GEC_CONSTANTS_PKG.BULK_RETURN_POSTYPE_BORROW THEN 
							var_postype_error_msg := 'Warning:' || GEC_CONSTANTS_PKG.BULK_RETURN_POST_TYPE_WARNING;
						ELSIF v_tempBulkReturn.TRANSACTION_TYPE IS NULL THEN
							var_postype_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_POST_TYPE_MISSING;
						ELSE
							var_postype_error_msg := '';
						END IF;
					ELSE
						var_cptyname_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_CPTY_IS_NOT_FOUND;
					END IF;
				ELSIF v_tempBulkReturn.COUNTERPARTY_CD IS NOT NULL AND v_tempBulkReturn.BARGAIN_REF IS NOT NULL THEN
					var_bargainref_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_BGREF_CPTY_VALUES;
					var_cptyname_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_BGREF_CPTY_VALUES;
					var_branch_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_BGREF_CPTY_VALUES;
					IF v_tempBulkReturn.TRANSACTION_TYPE IS NOT NULL THEN
						var_postype_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_POST_TYPE_NO_NEED;
					END IF;
				ELSIF v_tempBulkReturn.BRANCH_CD IS NOT NULL THEN
					IF v_tempBulkReturn.COUNTERPARTY_CD IS NOT NULL OR v_tempBulkReturn.BARGAIN_REF IS NOT NULL THEN
						var_bargainref_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_BGREF_CPTY_VALUES;
						var_cptyname_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_BGREF_CPTY_VALUES;
						var_branch_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_BGREF_CPTY_VALUES;
					END IF;
					IF v_tempBulkReturn.TRANSACTION_TYPE IS NOT NULL AND v_tempBulkReturn.TRANSACTION_TYPE<>'B' THEN
						var_postype_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_B_FOR_BR;
					END IF;
				ELSIF v_tempBulkReturn.COUNTERPARTY_CD IS NULL AND v_tempBulkReturn.BARGAIN_REF IS NOT NULL THEN
					IF v_tempBulkReturn.TRANSACTION_TYPE IS NOT NULL THEN
						var_postype_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_POST_TYPE_NO_NEED;
					END IF;
				ELSE
					
					IF v_tempBulkReturn.TRANSACTION_TYPE IS NULL THEN
						var_postype_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_POST_TYPE_MISSING;
					ELSIF v_tempBulkReturn.TRANSACTION_TYPE<>GEC_CONSTANTS_PKG.BULK_RETURN_POSTYPE_BORROW THEN
						var_postype_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_B_FOR_CPTY;
					ELSE
						var_postype_error_msg := '';
					END IF;
				END IF;
				--GEC2.3 CHANGE
				IF v_tempBulkReturn.BARGAIN_REF IS NOT NULL THEN
					IF v_tempBulkReturn.G1_INSTANCE_CD IS NULL THEN
						var_g1_instance_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_G1_INSTANCE_REQ;
					ELSE
						SELECT COUNT(G1_INSTANCE_ID) INTO var_g1_instance_count FROM GEC_G1_INSTANCE WHERE G1_INSTANCE_CD = v_tempBulkReturn.G1_INSTANCE_CD;
						IF var_g1_instance_count <1 THEN
							var_g1_instance_error_msg := GEC_CONSTANTS_PKG.BULK_RETURN_G1_INSTANCE_INV;
						END IF;
					END IF;
				ELSE
					v_tempBulkReturn.G1_INSTANCE_CD := NULL;
					v_tempBulkReturn.DIVIDEND_TRADE_FLAG := 'N';		
				END IF;
				
				UPDATE GEC_BULK_G1_RETURN_TEMP 
					SET ASSETCODE_ERROR_MSG=var_assetcode_error_msg,
						tradedate_error_msg=var_tradedate_error_msg,
						settledate_error_msg=var_settledate_error_msg,	
						shareqty_error_msg=var_shareqty_error_msg,	
						bargainref_error_msg=var_bargainref_error_msg,
						cptyname_error_msg=var_cptyname_error_msg,	
						postype_error_msg=var_postype_error_msg,
						branch_cd_error_msg = var_branch_error_msg,
						g1_instance_cd_error_msg = var_g1_instance_error_msg,
						dividend_trade_flag_error_msg = var_div_trade_error_msg,
						G1_INSTANCE_CD = v_tempBulkReturn.G1_INSTANCE_CD,
						DIVIDEND_TRADE_FLAG = v_tempBulkReturn.DIVIDEND_TRADE_FLAG
				WHERE BULK_G1_RETURN_ID=v_tempBulkReturn.BULK_G1_RETURN_ID;
			END IF;
		END LOOP;	
		OPEN r_bulkReturn FOR
			SELECT BULK_G1_RETURN_ID,gbgr.ASSET_ID,ga.CUSIP,ga.ISIN,ga.QUIK,ga.SEDOL,ga.ticker,ga.DESCRIPTION,ASSET_CODE,ga.TRADE_COUNTRY_CD,
			COUNTERPARTY_CD,TRANSACTION_TYPE,TRANSACTION_CD,TRADE_DATE,SETTLE_DATE,QTY,BARGAIN_REF,STATUS,BRANCH_CD,G1_INSTANCE_CD,DIVIDEND_TRADE_FLAG,
			gbgr.updated_At,gbgr.updated_By,gbgr.CREATED_BY,gbgr.CREATED_AT,ASSETCODE_ERROR_MSG,tradedate_error_msg,settledate_error_msg,shareqty_error_msg,bargainref_error_msg,
			cptyname_error_msg,postype_error_msg,branch_cd_error_msg,g1_instance_cd_error_msg,dividend_trade_flag_error_msg
			FROM GEC_BULK_G1_RETURN_TEMP gbgr
			LEFT JOIN GEC_ASSET ga
			ON gbgr.ASSET_ID=ga.ASSET_ID
			ORDER BY gbgr.ASSET_ID ASC,SETTLE_DATE ASC, QTY DESC;
	END VALIDATE_BULK_RETURN;
	
	PROCEDURE STATUS_VALIDATE_BAR_CPTY_PTYPE(var_valid IN OUT VARCHAR2,
												var_BARGAIN_REF IN VARCHAR2,
												var_COUNTERPARTY_CD IN VARCHAR2,
												var_TRANSACTION_TYPE IN VARCHAR2)
	IS
		var_cntpty_broker_type GEC_BROKER.BORROW_REQUEST_TYPE%type; -- 'SB' OR 'NSB'
		var_cntpty_post_type varchar2(1):=''; --'B' 'L' 'D' VALUE OF TRANSACTION_TYPE
		var_cntpty_is_broker varchar2(1):='Y';
		var_cntpty_is_cntpty varchar2(1):='Y';
	BEGIN
		IF var_valid<>'X' AND var_BARGAIN_REF IS NOT NULL THEN
				IF var_COUNTERPARTY_CD IS NOT NULL OR var_TRANSACTION_TYPE IS NOT NULL THEN
					var_valid :='X';
				END IF;
		END IF;
		IF var_valid<>'X' AND var_BARGAIN_REF IS NULL THEN
			IF var_COUNTERPARTY_CD IS NULL THEN
				IF var_TRANSACTION_TYPE IS NULL OR var_TRANSACTION_TYPE <> 'B' THEN
					var_valid :='X';
				END IF;
			ELSE 
				BEGIN
					SELECT borrow_request_type INTO var_cntpty_broker_type 
					FROM gec_broker 
					WHERE BORROW_REQUEST_TYPE != 'Intercompany Counterparty'
	 				AND LEGAL_ENTITY_CD='SSBT' and BROKER_CD=var_COUNTERPARTY_CD;
				EXCEPTION WHEN NO_DATA_FOUND THEN
					var_cntpty_is_broker := 'N';
				END;
				BEGIN
					SELECT 'Y' INTO var_cntpty_is_cntpty
					FROM gec_G1_booking
					WHERE transaction_cd='G1L' AND pos_type='NSB' AND counterparty_cd=var_COUNTERPARTY_CD;
				EXCEPTION WHEN NO_DATA_FOUND THEN
					var_cntpty_is_cntpty := 'N';
				END;
				
				IF var_cntpty_is_broker='Y' AND var_cntpty_is_cntpty='Y' THEN
					IF var_TRANSACTION_TYPE IS NULL OR var_TRANSACTION_TYPE = GEC_CONSTANTS_PKG.BULK_RETURN_POSTYPE_BOTH THEN
						var_valid :='X';
					END IF;
				ELSIF var_cntpty_is_broker='Y' AND var_cntpty_is_cntpty='N' THEN
					IF var_cntpty_broker_type <> 'SB' THEN
						IF var_TRANSACTION_TYPE =GEC_CONSTANTS_PKG.BULK_RETURN_POSTYPE_BOTH OR var_TRANSACTION_TYPE IS NULL THEN 
							var_valid :='X';
						END IF;
					ELSE
						IF var_TRANSACTION_TYPE <>GEC_CONSTANTS_PKG.BULK_RETURN_POSTYPE_BOTH OR var_TRANSACTION_TYPE IS NULL THEN 
							var_valid :='X';
						END IF;
					END IF;
				ELSIF var_cntpty_is_broker='N' AND var_cntpty_is_cntpty='Y' THEN
					IF var_TRANSACTION_TYPE =GEC_CONSTANTS_PKG.BULK_RETURN_POSTYPE_BOTH OR var_TRANSACTION_TYPE IS NULL THEN
						var_valid :='X';
					END IF;
				ELSE
					var_valid :='X';
				END IF;
			END IF;
		END IF;
	END STATUS_VALIDATE_BAR_CPTY_PTYPE;
	
	PROCEDURE SAVE_UI_BULK_RETURN (r_bulkReturn OUT SYS_REFCURSOR)
	IS
		CURSOR v_tempBulkReturns IS
			SELECT  ROWID AS ROW_ID,
					BULK_G1_RETURN_ID,
					ASSET_ID,
					ASSET_CODE,
					TRADE_DATE,
					SETTLE_DATE,
					COUNTERPARTY_CD,
					QTY,
					BARGAIN_REF,
					TRANSACTION_TYPE,
					TRANSACTION_CD,
					BRANCH_CD,
					G1_INSTANCE_CD,
					DIVIDEND_TRADE_FLAG,
					CREATED_BY,
					CREATED_AT,
					UPDATED_AT,
					UPDATED_BY
			FROM GEC_BULK_G1_RETURN_TEMP;
		var_valid VARCHAR(1) :='P';
		var_cntpty_is_broker VARCHAR(1) :='Y';
		var_cntpty_is_cntpty VARCHAR(1) :='Y';
		var_transaction_type GEC_BULK_G1_RETURN_TEMP.TRANSACTION_TYPE%type;
		var_new_bulkreturn_id GEC_BULK_G1_RETURN_TEMP.BULK_G1_RETURN_ID%type;
	BEGIN
		FOR v_tempBulkReturn IN v_tempBulkReturns
		LOOP
			var_valid :='P';
			var_transaction_type := v_tempBulkReturn.TRANSACTION_TYPE;
			IF var_valid<>'X' AND v_tempBulkReturn.ASSET_ID IS NULL THEN
				var_valid :='X';
			END IF;
			IF var_valid<>'X' AND (v_tempBulkReturn.SETTLE_DATE IS NULL OR v_tempBulkReturn.SETTLE_DATE=0
				OR v_tempBulkReturn.TRADE_DATE IS NULL OR v_tempBulkReturn.TRADE_DATE=0) THEN
				var_valid :='X';
			END IF;
			IF var_valid<>'X' AND v_tempBulkReturn.SETTLE_DATE < v_tempBulkReturn.TRADE_DATE THEN
				var_valid :='X';
			END IF;
			IF var_valid<>'X' AND v_tempBulkReturn.QTY <=0 THEN
				var_valid :='X';
			END IF;
			
			STATUS_VALIDATE_BAR_CPTY_PTYPE(var_valid,v_tempBulkReturn.BARGAIN_REF,v_tempBulkReturn.COUNTERPARTY_CD,v_tempBulkReturn.TRANSACTION_TYPE);
 			
 			--IF var_valid='X' THEN
				--UPDATE GEC_BULK_G1_RETURN_TEMP SET STATUS='X' WHERE ROWID=v_tempBulkReturn.ROW_ID;
			--END IF;
			IF v_tempBulkReturn.BULK_G1_RETURN_ID IS NULL OR v_tempBulkReturn.BULK_G1_RETURN_ID=0 THEN
				SELECT GEC_BULK_G1_RETURN_ID_SEQ.NEXTVAL INTO var_new_bulkreturn_id FROM DUAL;
				INSERT INTO GEC_BULK_G1_RETURN
				(BULK_G1_RETURN_ID,
				ASSET_ID,
				ASSET_CODE,
				TRANSACTION_TYPE,
				TRADE_DATE,
				SETTLE_DATE,
				COUNTERPARTY_CD,
				QTY,
				STATUS,
				BARGAIN_REF,
				TRANSACTION_CD,
				BRANCH_CD,
				G1_INSTANCE_CD,
				DIVIDEND_TRADE_FLAG,
				CREATED_AT,
				CREATED_BY,
				UPDATED_AT,
				UPDATED_BY)
				VALUES
				(	var_new_bulkreturn_id, 
					v_tempBulkReturn.ASSET_ID,
					 v_tempBulkReturn.ASSET_CODE,
					 var_transaction_type,
					 v_tempBulkReturn.TRADE_DATE,
					 v_tempBulkReturn.SETTLE_DATE,
					 v_tempBulkReturn.COUNTERPARTY_CD,
					 v_tempBulkReturn.QTY,
						var_valid,
					 v_tempBulkReturn.BARGAIN_REF,
					 v_tempBulkReturn.TRANSACTION_CD,
					 v_tempBulkReturn.BRANCH_CD,
					 v_tempBulkReturn.G1_INSTANCE_CD,
					 v_tempBulkReturn.DIVIDEND_TRADE_FLAG,
					 v_tempBulkReturn.CREATED_AT,
					 v_tempBulkReturn.CREATED_BY,
					 v_tempBulkReturn.UPDATED_AT,
					 v_tempBulkReturn.UPDATED_BY
				);
				UPDATE GEC_BULK_G1_RETURN_TEMP SET BULK_G1_RETURN_ID=var_new_bulkreturn_id WHERE rowid=v_tempBulkReturn.ROW_ID;
			ELSE
				UPDATE GEC_BULK_G1_RETURN
				SET ASSET_ID = v_tempBulkReturn.ASSET_ID,
					ASSET_CODE = v_tempBulkReturn.ASSET_CODE,
					TRANSACTION_TYPE = v_tempBulkReturn.TRANSACTION_TYPE,
					TRADE_DATE = v_tempBulkReturn.TRADE_DATE,
					SETTLE_DATE = v_tempBulkReturn.SETTLE_DATE,
					COUNTERPARTY_CD = v_tempBulkReturn.COUNTERPARTY_CD,
					QTY = v_tempBulkReturn.QTY,
					STATUS = var_valid,
					BARGAIN_REF = v_tempBulkReturn.BARGAIN_REF,
					BRANCH_CD = v_tempBulkReturn.BRANCH_CD,
					G1_INSTANCE_CD = v_tempBulkReturn.G1_INSTANCE_CD,
					DIVIDEND_TRADE_FLAG = v_tempBulkReturn.DIVIDEND_TRADE_FLAG,
					UPDATED_AT = v_tempBulkReturn.UPDATED_AT,
					UPDATED_BY = v_tempBulkReturn.UPDATED_BY
				WHERE BULK_G1_RETURN_ID=v_tempBulkReturn.BULK_G1_RETURN_ID;
			END IF;
		END LOOP;	
		-- return all the results
		OPEN r_bulkReturn FOR
			SELECT BULK_G1_RETURN_ID,gbgr.ASSET_ID,ga.CUSIP,ga.ISIN,ga.QUIK,ga.SEDOL,ga.ticker,ga.DESCRIPTION,ASSET_CODE,ga.TRADE_COUNTRY_CD,
			COUNTERPARTY_CD,TRANSACTION_TYPE,TRANSACTION_CD,TRADE_DATE,SETTLE_DATE,QTY,BARGAIN_REF,STATUS,BRANCH_CD,G1_INSTANCE_CD,DIVIDEND_TRADE_FLAG,
			gbgr.updated_At,gbgr.updated_By,gbgr.CREATED_BY,gbgr.CREATED_AT,ASSETCODE_ERROR_MSG,tradedate_error_msg,settledate_error_msg,shareqty_error_msg,bargainref_error_msg,
			cptyname_error_msg,postype_error_msg,branch_cd_error_msg,g1_instance_cd_error_msg,dividend_trade_flag_error_msg
			FROM GEC_BULK_G1_RETURN_TEMP gbgr
			LEFT JOIN GEC_ASSET ga
			ON gbgr.ASSET_ID=ga.ASSET_ID;
		
	END SAVE_UI_BULK_RETURN;
END GEC_BULK_TRADE_PKG;
/